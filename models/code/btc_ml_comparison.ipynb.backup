{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "7fdf99d4",
   "metadata": {},
   "source": [
    "# BTC ML Trading Models Comparison"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "048eec11",
   "metadata": {},
   "outputs": [],
   "source": [
    "# packages\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import os\n",
    "\n",
    "import sys\n",
    "\n",
    "# Add the features directory to path - navigate from models/code to features\n",
    "sys.path.append(os.path.join(os.path.dirname(os.path.dirname(os.getcwd())), 'features'))\n",
    "from trend_indicator_pipeline_pkg import TrendIndicatorPipeline, MomentumIndicatorPipeline, VolatilityIndicatorPipeline, CorrelationIndicatorPipeline, FractalDimensionPipeline\n",
    "\n",
    "from arcticdb.version_store.helper import ArcticMemoryConfig\n",
    "from arcticdb import Arctic\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from pycaret.classification import setup, compare_models, save_model, predict_model, pull, tune_model, finalize_model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b24c9d9b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load dataset\n",
    "df = pd.read_csv(\"D:\\Coding\\Crypto_Research\\data\\BTCUSD_2023-1min_ML.csv\")\n",
    "\n",
    "df = df.dropna()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0cb3d085",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       Unnamed: 0.1            Timestamp  Unnamed: 0     Open     High  \\\n",
      "50398         50398  2023-02-10 03:16:00       50398  21851.5  21856.5   \n",
      "50399         50399  2023-02-10 03:17:00       50399  21853.2  21853.2   \n",
      "50400         50400  2023-02-10 03:18:00       50400  21854.3  21855.1   \n",
      "50401         50401  2023-02-10 03:19:00       50401  21849.3  21849.9   \n",
      "50402         50402  2023-02-10 03:20:00       50402  21840.9  21853.0   \n",
      "\n",
      "           Low    Close    Volume        ema_7d       ema_20d  ...  \\\n",
      "50398  21851.2  21853.3  0.000218  22893.243714  22435.379752  ...   \n",
      "50399  21851.2  21852.7  0.000121  22893.037277  22435.339289  ...   \n",
      "50400  21847.1  21849.9  0.000298  22892.830326  22435.298635  ...   \n",
      "50401  21840.3  21841.1  0.000497  22892.621670  22435.257373  ...   \n",
      "50402  21840.2  21845.7  0.000385  22892.413968  22435.216433  ...   \n",
      "\n",
      "       macd_hist_12_26    rsi_14d    bb_mid_20d  bb_upper_20d  bb_lower_20d  \\\n",
      "50398      -314.118075  49.990289  22953.582628  23956.433515  21950.731741   \n",
      "50399      -314.177222  49.990082  22953.610139  23956.296743  21950.923535   \n",
      "50400      -314.236521  49.989119  22953.637677  23956.159451  21951.115903   \n",
      "50401      -314.296345  49.986091  22953.665097  23956.021941  21951.308253   \n",
      "50402      -314.355861  49.987674  22953.692740  23955.883441  21951.502039   \n",
      "\n",
      "         atr_14d   fd_14d  future_close  future_return  future_trend  \n",
      "50398  11.869257  268.810       22067.6       0.009806             0  \n",
      "50399  11.868773  268.788       22063.4       0.009642             0  \n",
      "50400  11.868581  268.716       22066.1       0.009895             0  \n",
      "50401  11.868468  268.735       22066.4       0.010315             0  \n",
      "50402  11.868515  268.788       22065.9       0.010080             0  \n",
      "\n",
      "[5 rows x 26 columns]\n"
     ]
    },
    {
     "data": {
      "application/vnd.microsoft.datawrangler.viewer.v0+json": {
       "columns": [
        {
         "name": "index",
         "rawType": "int64",
         "type": "integer"
        },
        {
         "name": "Unnamed: 0.1",
         "rawType": "int64",
         "type": "integer"
        },
        {
         "name": "Timestamp",
         "rawType": "object",
         "type": "string"
        },
        {
         "name": "Unnamed: 0",
         "rawType": "int64",
         "type": "integer"
        },
        {
         "name": "Open",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "High",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "Low",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "Close",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "Volume",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "ema_7d",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "ema_20d",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "ema_30d",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "sma_7d",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "sma_20d",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "sma_30d",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "macd_12_26",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "macd_sig_12_26",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "macd_hist_12_26",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "rsi_14d",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "bb_mid_20d",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "bb_upper_20d",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "bb_lower_20d",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "atr_14d",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "fd_14d",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "future_close",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "future_return",
         "rawType": "float64",
         "type": "float"
        },
        {
         "name": "future_trend",
         "rawType": "int64",
         "type": "integer"
        }
       ],
       "ref": "65573227-06fc-4310-b961-7be70559f3ba",
       "rows": [
        [
         "50398",
         "50398",
         "2023-02-10 03:16:00",
         "50398",
         "21851.5",
         "21856.5",
         "21851.2",
         "21853.3",
         "0.0002180000001317",
         "22893.243713718864",
         "22435.379751573328",
         "21744.5795402644",
         "23040.502132936508",
         "22953.582628472224",
         "21892.887453703705",
         "839.6404799593802",
         "1153.7585552275875",
         "-314.1180752682073",
         "49.99028874049103",
         "22953.582628472224",
         "23956.433515472407",
         "21950.73174147204",
         "11.869257336664884",
         "268.81",
         "22067.6",
         "0.0098062992774546",
         "0"
        ],
        [
         "50399",
         "50399",
         "2023-02-10 03:17:00",
         "50399",
         "21853.2",
         "21853.2",
         "21851.2",
         "21852.7",
         "0.0001210000013998",
         "22893.03727711263",
         "22435.33928910664",
         "21744.584545725367",
         "23040.30953373016",
         "22953.61013888889",
         "21892.99558101852",
         "839.532845590089",
         "1153.7100673470788",
         "-314.17722175698987",
         "49.99008228709034",
         "22953.61013888889",
         "23956.296743266736",
         "21950.923534511043",
         "11.86877275048747",
         "268.788",
         "22063.4",
         "0.0096418291561226",
         "0"
        ],
        [
         "50400",
         "50400",
         "2023-02-10 03:18:00",
         "50400",
         "21854.3",
         "21855.1",
         "21847.1",
         "21849.9",
         "0.0002979999999297",
         "22892.83032596153",
         "22435.298635012048",
         "21744.589421327983",
         "23040.11680555556",
         "22953.637677083338",
         "21893.103673611116",
         "839.4250497498033",
         "1153.6615703148134",
         "-314.2365205650101",
         "49.989118812643454",
         "22953.637677083338",
         "23956.15945137155",
         "21951.11590279512",
         "11.868580847077226",
         "268.716",
         "22066.1",
         "0.0098947821271491",
         "0"
        ],
        [
         "50401",
         "50401",
         "2023-02-10 03:19:00",
         "50401",
         "21849.3",
         "21849.9",
         "21840.3",
         "21841.1",
         "0.0004970000054527",
         "22892.621670009557",
         "22435.25737265067",
         "21744.593889306903",
         "23039.922529761905",
         "22953.665097222223",
         "21893.211516203704",
         "839.3167185665043",
         "1153.6130640495949",
         "-314.2963454830906",
         "49.98609084167399",
         "22953.665097222223",
         "23956.02194120485",
         "21951.3082532396",
         "11.868468318265368",
         "268.735",
         "22066.4",
         "0.0103154145166682",
         "0"
        ],
        [
         "50402",
         "50402",
         "2023-02-10 03:20:00",
         "50402",
         "21840.9",
         "21853.0",
         "21840.2",
         "21845.7",
         "0.000384999999369",
         "22892.413968061333",
         "22435.21643258799",
         "21744.59857003701",
         "23039.72775793651",
         "22953.692739583337",
         "21893.319444444445",
         "839.2086871747415",
         "1153.5645485991088",
         "-314.3558614243673",
         "49.98767445802668",
         "22953.692739583337",
         "23955.88344055654",
         "21951.502038610128",
         "11.868514525194025",
         "268.788",
         "22065.9",
         "0.0100797868688117",
         "0"
        ],
        [
         "50403",
         "50403",
         "2023-02-10 03:21:00",
         "50403",
         "21846.0",
         "21851.4",
         "21846.0",
         "21851.3",
         "0.0002279999994243",
         "22892.20741832062",
         "22435.175884243657",
         "21744.60350980368",
         "23039.533769841262",
         "22953.72061805556",
         "21893.427543981485",
         "839.1010178411452",
         "1153.5160240206417",
         "-314.41500617949623",
         "49.98960229907513",
         "22953.72061805556",
         "23955.74397072953",
         "21951.697265381583",
         "11.86820854729099",
         "268.747",
         "22066.4",
         "0.009843807919895",
         "0"
        ],
        [
         "50404",
         "50404",
         "2023-02-10 03:22:00",
         "50404",
         "21850.7",
         "21852.8",
         "21850.5",
         "21852.5",
         "0.0003279999991718",
         "22892.001147629555",
         "22435.13542204552",
         "21744.60850489593",
         "23039.339732142857",
         "22953.748336805555",
         "21893.535671296297",
         "838.9934363118045",
         "1153.4674903291502",
         "-314.4740540173457",
         "49.99001540902621",
         "22953.748336805555",
         "23955.60565651037",
         "21951.891017100737",
         "11.86773393377178",
         "268.669",
         "22075.0",
         "0.0101819013842809",
         "0"
        ],
        [
         "50405",
         "50405",
         "2023-02-10 03:23:00",
         "50405",
         "21852.5",
         "21856.1",
         "21847.0",
         "21847.4",
         "0.0006200000011631",
         "22891.79390605677",
         "22435.09460850279",
         "21744.61326365129",
         "23039.145476190475",
         "22953.77595486111",
         "21893.643622685184",
         "838.8855499775345",
         "1153.418947479007",
         "-314.5333975014728",
         "49.98826038185506",
         "22953.77595486111",
         "23955.4674117833",
         "21952.08449793892",
         "11.867596645382209",
         "268.671",
         "22069.1",
         "0.0101476605911914",
         "0"
        ],
        [
         "50406",
         "50406",
         "2023-02-10 03:24:00",
         "50406",
         "21846.9",
         "21851.7",
         "21846.8",
         "21849.2",
         "0.0003240000014557",
         "22891.58706270669",
         "22435.0539227899",
         "21744.618105517744",
         "23038.951359126982",
         "22953.8035625",
         "21893.751694444443",
         "838.7777888755627",
         "1153.3703954909504",
         "-314.5926066153877",
         "49.98888009545307",
         "22953.8035625",
         "23955.329403711672",
         "21952.277721288323",
         "11.867251030469244",
         "268.7",
         "22069.8",
         "0.0100964795049703",
         "0"
        ],
        [
         "50407",
         "50407",
         "2023-02-10 03:25:00",
         "50407",
         "21849.3",
         "21853.8",
         "21845.8",
         "21848.4",
         "0.0003579999997782",
         "22891.38010167848",
         "22435.01318434868",
         "21744.622910123864",
         "23038.758452380956",
         "22953.830885416668",
         "21893.85976388889",
         "838.6699909620329",
         "1153.321834360709",
         "-314.6518433986762",
         "49.98860478094066",
         "22953.830885416668",
         "23955.19314914579",
         "21952.468621687545",
         "11.867059202541144",
         "268.647",
         "22067.0",
         "0.0100053093132677",
         "0"
        ],
        [
         "50408",
         "50408",
         "2023-02-10 03:26:00",
         "50408",
         "21847.9",
         "21849.9",
         "21840.4",
         "21841.5",
         "0.000619000003553",
         "22891.17181279808",
         "22434.97196958639",
         "21744.627395070504",
         "23038.56425595238",
         "22953.85788888889",
         "21893.96766435185",
         "838.5617761121757",
         "1153.273264025357",
         "-314.7114879131814",
         "49.98623020136056",
         "22953.85788888889",
         "23955.058210269806",
         "21952.657567507977",
         "11.866941788890225",
         "268.633",
         "22066.8",
         "0.0103152256026371",
         "0"
        ],
        [
         "50409",
         "50409",
         "2023-02-10 03:27:00",
         "50409",
         "21841.3",
         "21842.1",
         "21835.5",
         "21835.5",
         "0.0003850000002785",
         "22890.96237488263",
         "22434.93034103393",
         "21744.631602038164",
         "23038.36618055556",
         "22953.884659722225",
         "21894.07543055556",
         "838.4532004821813",
         "1153.2246844306433",
         "-314.771483948462",
         "49.9841654305064",
         "22953.884659722225",
         "23954.92412169929",
         "21952.84519774516",
         "11.866680531857046",
         "268.631",
         "22066.8",
         "0.0105928419317166",
         "0"
        ],
        [
         "50410",
         "50410",
         "2023-02-10 03:28:00",
         "50410",
         "21835.4",
         "21835.8",
         "21831.3",
         "21833.5",
         "0.0005210000022088",
         "22890.752581732177",
         "22434.88857648819",
         "21744.63571622061",
         "23038.16619047619",
         "22953.91140625",
         "21894.183136574076",
         "838.3445134004141",
         "1153.1760955607983",
         "-314.8315821603842",
         "49.98347717732167",
         "22953.91140625",
         "23954.789949819125",
         "21953.03286268088",
         "11.866315121116378",
         "268.657",
         "22066.7",
         "0.0106808344974466",
         "0"
        ],
        [
         "50411",
         "50411",
         "2023-02-10 03:29:00",
         "50411",
         "21833.4",
         "21836.7",
         "21833.4",
         "21833.7",
         "0.00034000000187",
         "22890.542869881818",
         "22434.846828731064",
         "21744.63983947164",
         "23037.96593253968",
         "22953.938010416663",
         "21894.29087962963",
         "838.2358519830595",
         "1153.1274974212138",
         "-314.8916454381542",
         "49.98354605051591",
         "22953.938010416663",
         "23954.65670284141",
         "21953.21931799192",
         "11.865890204691718",
         "268.612",
         "22068.5",
         "0.0107540178714555",
         "0"
        ],
        [
         "50412",
         "50412",
         "2023-02-10 03:30:00",
         "50412",
         "21834.1",
         "21836.5",
         "21833.2",
         "21835.2",
         "0.0004290000038054",
         "22890.33349722635",
         "22434.80518803604",
         "21744.64403197461",
         "23037.765644841267",
         "22953.96452430556",
         "21894.398712962964",
         "838.1272972381157",
         "1153.0788900297805",
         "-314.9515927916648",
         "49.98406261904992",
         "22953.96452430556",
         "23954.524176586063",
         "21953.404872025047",
         "11.865465309344264",
         "268.635",
         "22068.7",
         "0.010693742214406",
         "0"
        ],
        [
         "50413",
         "50413",
         "2023-02-10 03:31:00",
         "50413",
         "21835.4",
         "21835.4",
         "21830.6",
         "21833.1",
         "0.0006140000023151",
         "22890.123749483624",
         "22434.763404404355",
         "21744.648127063523",
         "23037.56564484127",
         "22953.99086805556",
         "21894.50656944445",
         "838.0186248082136",
         "1153.0302733697663",
         "-315.0116485615529",
         "49.98333986605331",
         "22953.99086805556",
         "23954.39250978988",
         "21953.589226321237",
         "11.865114839834872",
         "268.667",
         "22067.0",
         "0.0107130915902918",
         "0"
        ],
        [
         "50414",
         "50414",
         "2023-02-10 03:32:00",
         "50414",
         "21833.0",
         "21838.2",
         "21832.3",
         "21838.2",
         "0.0004210000024613",
         "22889.91505515777",
         "22434.721977828583",
         "21744.652458068496",
         "23037.36672619047",
         "22954.0173125",
         "21894.614599537035",
         "837.910283393925",
         "1152.9816474936804",
         "-315.07136409975533",
         "49.98509629348123",
         "22954.0173125",
         "23954.26069781927",
         "21953.77392718073",
         "11.864818951201944",
         "268.615",
         "22065.2",
         "0.0103946295940141",
         "0"
        ],
        [
         "50415",
         "50415",
         "2023-02-10 03:33:00",
         "50415",
         "21839.0",
         "21839.8",
         "21833.8",
         "21834.3",
         "0.00039999999899",
         "22889.705628502645",
         "22434.680283305628",
         "21744.656608321588",
         "23037.16598214285",
         "22954.04360763889",
         "21894.722699074075",
         "837.8017120899349",
         "1152.9330123674704",
         "-315.1313002775355",
         "49.98375396017554",
         "22954.04360763889",
         "23954.1294184054",
         "21953.95779687238",
         "11.864528037563492",
         "268.553",
         "22066.0",
         "0.0106117439075216",
         "0"
        ],
        [
         "50416",
         "50416",
         "2023-02-10 03:34:00",
         "50416",
         "21834.4",
         "21838.3",
         "21833.6",
         "21837.8",
         "0.000319999999192",
         "22889.496937771863",
         "22434.63883472514",
         "21744.66092041583",
         "23036.96625",
         "22954.07022222222",
         "21894.831006944445",
         "837.6933720791349",
         "1152.8843680282546",
         "-315.1909959491197",
         "49.98495939973216",
         "22954.07022222222",
         "23953.99639893855",
         "21954.144045505887",
         "11.864172654228296",
         "268.599",
         "22067.6",
         "0.0105230380349668",
         "0"
        ],
        [
         "50417",
         "50417",
         "2023-02-10 03:35:00",
         "50417",
         "21839.4",
         "21851.6",
         "21838.0",
         "21850.6",
         "0.0002639999993334",
         "22889.290827874484",
         "22434.598277880952",
         "21744.66582488932",
         "23036.76794642857",
         "22954.09720486111",
         "21894.93962962963",
         "837.5858428680658",
         "1152.8357146025685",
         "-315.24987173450245",
         "49.989367588267626",
         "22954.09720486111",
         "23953.862320689484",
         "21954.332089032738",
         "11.864268677410127",
         "268.664",
         "22070.2",
         "0.0100500672750406",
         "0"
        ],
        [
         "50418",
         "50418",
         "2023-02-10 03:36:00",
         "50418",
         "21850.1",
         "21851.1",
         "21846.3",
         "21850.6",
         "0.000359999999091",
         "22889.084758867863",
         "22434.557723853115",
         "21744.670729135752",
         "23036.57119047619",
         "22954.124256944444",
         "21895.048280092597",
         "837.4783266669183",
         "1152.787052093821",
         "-315.3087254269028",
         "49.989367588267626",
         "22954.124256944444",
         "23953.72776013999",
         "21954.520753748897",
         "11.863918267257478",
         "268.599",
         "22071.8",
         "0.0101232918089206",
         "0"
        ],
        [
         "50419",
         "50419",
         "2023-02-10 03:37:00",
         "50419",
         "21849.7",
         "21849.7",
         "21845.2",
         "21845.2",
         "0.0003569999994397",
         "22888.877659421603",
         "22434.51679765445",
         "21744.67538316093",
         "23036.372986111117",
         "22954.1511875",
         "21895.15666203704",
         "837.3704869641588",
         "1152.7383804534957",
         "-315.3678934893369",
         "49.98750872303776",
         "22954.1511875",
         "23953.593381813287",
         "21954.708993186705",
         "11.863597636391049",
         "268.58",
         "22069.7",
         "0.0102768571585519",
         "0"
        ],
        [
         "50420",
         "50420",
         "2023-02-10 03:38:00",
         "50420",
         "21844.9",
         "21845.1",
         "21844.2",
         "21844.3",
         "0.0002800000024762",
         "22888.67042250872",
         "22434.475811799955",
         "21744.67999530495",
         "23036.17452380952",
         "22954.178100694447",
         "21895.264891203704",
         "837.2626042401716",
         "1152.6896996763624",
         "-315.4270954361907",
         "49.98719891023888",
         "22954.178100694447",
         "23953.45899117616",
         "21954.897210212737",
         "11.86305876746067",
         "268.583",
         "22063.7",
         "0.0100438100557125",
         "0"
        ],
        [
         "50421",
         "50421",
         "2023-02-10 03:39:00",
         "50421",
         "21844.0",
         "21844.3",
         "21833.9",
         "21837.2",
         "0.0005660000115312",
         "22888.46181811977",
         "22434.434335753165",
         "21744.68427853935",
         "23035.974583333333",
         "22954.20453125",
         "21895.37295138889",
         "837.154292139574",
         "1152.6410096975742",
         "-315.48671755800024",
         "49.98475484490626",
         "22954.20453125",
         "23953.326966549157",
         "21955.08209595085",
         "11.862986195101172",
         "268.663",
         "22068.9",
         "0.0106103346582895",
         "0"
        ],
        [
         "50422",
         "50422",
         "2023-02-10 03:40:00",
         "50422",
         "21836.7",
         "21836.7",
         "21830.8",
         "21831.7",
         "0.0007310000119105",
         "22888.25216395488",
         "22434.392480655373",
         "21744.68830695172",
         "23035.774166666662",
         "22954.230565972222",
         "21895.48093287037",
         "837.0456504423237",
         "1152.5923104676915",
         "-315.5466600253678",
         "49.982861625227",
         "22954.230565972222",
         "23953.19691271204",
         "21955.264219232417",
         "11.862715213643082",
         "268.578",
         "22065.0",
         "0.0106862956160078",
         "0"
        ],
        [
         "50423",
         "50423",
         "2023-02-10 03:41:00",
         "50423",
         "21831.5",
         "21833.5",
         "21829.9",
         "21833.5",
         "0.0006170000083329",
         "22888.042908491345",
         "22434.350753459745",
         "21744.692418509003",
         "23035.574246031745",
         "22954.256479166663",
         "21895.589064814816",
         "836.9371341165061",
         "1152.5436020074876",
         "-315.60646789098155",
         "49.9834816488828",
         "22954.256479166663",
         "23953.067807442458",
         "21955.44515089088",
         "11.862305356737645",
         "268.583",
         "22069.8",
         "0.0108228181464263",
         "0"
        ],
        [
         "50424",
         "50424",
         "2023-02-10 03:42:00",
         "50424",
         "21833.0",
         "21833.0",
         "21814.4",
         "21820.3",
         "0.0008740000175748",
         "22887.831075754813",
         "22434.3081125269",
         "21744.695918778973",
         "23035.373958333337",
         "22954.281944444443",
         "21895.69695601852",
         "836.8278083915902",
         "1152.4948841934893",
         "-315.66707580189905",
         "49.97893805598824",
         "22954.281944444443",
         "23952.940219243883",
         "21955.623669645003",
         "11.862664369368757",
         "268.606",
         "22086.0",
         "0.0121767345086914",
         "0"
        ],
        [
         "50425",
         "50425",
         "2023-02-10 03:43:00",
         "50425",
         "21819.8",
         "21823.5",
         "21815.9",
         "21815.9",
         "0.0004970000040884",
         "22887.618412115145",
         "22434.265169010177",
         "21744.69921518791",
         "23035.172688492064",
         "22954.307416666663",
         "21895.80461805555",
         "836.7182217918235",
         "1152.4461569868847",
         "-315.72793519506126",
         "49.977423633464895",
         "22954.307416666663",
         "23952.81211099627",
         "21955.80272233705",
         "11.86245292768377",
         "268.532",
         "22085.0",
         "0.012335040039604",
         "0"
        ],
        [
         "50426",
         "50426",
         "2023-02-10 03:44:00",
         "50426",
         "21815.5",
         "21820.4",
         "21812.3",
         "21820.3",
         "0.0007200000090961",
         "22887.40666359573",
         "22434.22253402049",
         "21744.702715143227",
         "23034.971825396824",
         "22954.332965277776",
         "21895.91246527778",
         "836.6089227486736",
         "1152.3974204334957",
         "-315.788497684822",
         "49.97893940753946",
         "22954.332965277776",
         "23952.68393001875",
         "21955.9820005368",
         "11.86226629807426",
         "268.545",
         "22071.5",
         "0.0115122156890602",
         "0"
        ],
        [
         "50427",
         "50427",
         "2023-02-10 03:45:00",
         "50427",
         "21820.2",
         "21820.2",
         "21815.9",
         "21817.2",
         "0.0003169999995407",
         "22887.194342067392",
         "22434.17968672116",
         "21744.706071421315",
         "23034.77046626984",
         "22954.358392361108",
         "21896.02039351852",
         "836.4994438391768",
         "1152.3486745070095",
         "-315.84923066783267",
         "49.977872377262266",
         "22954.358392361108",
         "23952.55619510525",
         "21956.160589616964",
         "11.86189614597614",
         "268.583",
         "22077.2",
         "0.011917202940799",
         "0"
        ],
        [
         "50428",
         "50428",
         "2023-02-10 03:46:00",
         "50428",
         "21817.5",
         "21817.5",
         "21811.6",
         "21811.6",
         "0.0003690000053211",
         "22886.98095166127",
         "22434.13645352184",
         "21744.709168290767",
         "23034.568511904763",
         "22954.38384722222",
         "21896.128416666663",
         "836.3896293027719",
         "1152.2999191570825",
         "-315.91028985431035",
         "49.97594485857679",
         "22954.38384722222",
         "23952.427682395515",
         "21956.340012048924",
         "11.861600417000645",
         "268.631",
         "22072.1",
         "0.011943186194502",
         "0"
        ],
        [
         "50429",
         "50429",
         "2023-02-10 03:47:00",
         "50429",
         "21811.6",
         "21812.8",
         "21810.7",
         "21811.1",
         "0.0008200000197575",
         "22886.767504393803",
         "22434.09318860371",
         "21744.71224186923",
         "23034.3658234127",
         "22954.40929513889",
         "21896.236502314816",
         "836.2797970119063",
         "1152.2511543824282",
         "-315.9713573705219",
         "49.97577275738748",
         "22954.40929513889",
         "23952.29913760046",
         "21956.519452677323",
         "11.861116210630756",
         "268.557",
         "22070.1",
         "0.0118746876590359",
         "0"
        ],
        [
         "50430",
         "50430",
         "2023-02-10 03:48:00",
         "50430",
         "21811.0",
         "21811.2",
         "21802.8",
         "21805.8",
         "0.0010290000354871",
         "22886.5530479898",
         "22434.04955864721",
         "21744.71506994072",
         "23034.16209325397",
         "22954.4346875",
         "21896.3445",
         "836.1696478502563",
         "1152.202380135606",
         "-316.03273228534977",
         "49.97394846716451",
         "22954.4346875",
         "23952.17038905537",
         "21956.698985944637",
         "11.860944528279036",
         "268.531",
         "22072.5",
         "0.0122306909170954",
         "0"
        ],
        [
         "50431",
         "50431",
         "2023-02-10 03:49:00",
         "50431",
         "21804.8",
         "21806.4",
         "21799.1",
         "21799.5",
         "0.0010980000388372",
         "22886.33738425644",
         "22434.00549423565",
         "21744.71760622137",
         "23033.95721230159",
         "22954.46004861111",
         "21896.452847222223",
         "836.0591195554407",
         "1152.1535963595734",
         "-316.0944768041327",
         "49.97178003692596",
         "22954.46004861111",
         "23952.04117771677",
         "21956.878919505445",
         "11.860718290951246",
         "268.59",
         "22070.8",
         "0.0124452395697148",
         "0"
        ],
        [
         "50432",
         "50432",
         "2023-02-10 03:50:00",
         "50432",
         "21799.2",
         "21801.0",
         "21788.3",
         "21791.0",
         "0.001139000027706",
         "22886.120076968626",
         "22433.960842626733",
         "21744.71974887518",
         "23033.7497718254",
         "22954.485701388887",
         "21896.56147685185",
         "835.948075095599",
         "1152.104802976152",
         "-316.1567278805528",
         "49.96885453018381",
         "22954.485701388887",
         "23951.90914685723",
         "21957.062255920544",
         "11.8607599219884",
         "268.535",
         "22070.8",
         "0.0128401633701986",
         "0"
        ],
        [
         "50433",
         "50433",
         "2023-02-10 03:51:00",
         "50433",
         "21791.6",
         "21817.1",
         "21791.6",
         "21816.1",
         "0.0011080000203946",
         "22885.90779245777",
         "22433.917937113547",
         "21744.723053439942",
         "23033.54333333333",
         "22954.51248958333",
         "21896.670201388886",
         "835.8386083987243",
         "1152.056000230287",
         "-316.21739183156274",
         "49.97750257622106",
         "22954.51248958333",
         "23951.772182918663",
         "21957.252796248",
         "11.861466233500206",
         "268.525",
         "22061.3",
         "0.0112394057599662",
         "0"
        ],
        [
         "50434",
         "50434",
         "2023-02-10 03:52:00",
         "50434",
         "21815.9",
         "21818.9",
         "21811.2",
         "21812.1",
         "0.0005400000000008",
         "22885.69475649061",
         "22433.87475681167",
         "21744.72617267082",
         "23033.338402777776",
         "22954.53927777777",
         "21896.778703703705",
         "835.7289057836242",
         "1152.0071880870194",
         "-316.27828230339514",
         "49.9761258488526",
         "22954.53927777777",
         "23951.634759348897",
         "21957.44379620666",
         "11.861259811564022",
         "268.511",
         "22065.4",
         "0.0116128204070219",
         "0"
        ],
        [
         "50435",
         "50435",
         "2023-02-10 03:53:00",
         "50435",
         "21812.1",
         "21812.7",
         "21807.7",
         "21808.3",
         "0.0003910000004907",
         "22885.48100889484",
         "22433.8313156286",
         "21744.72911583544",
         "23033.134265873017",
         "22954.56628819444",
         "21896.8869375",
         "835.6189797542174",
         "1151.958366513324",
         "-316.3393867591067",
         "49.974817963232525",
         "22954.56628819444",
         "23951.495406855767",
         "21957.637169533115",
         "11.86091947129559",
         "268.595",
         "22069.5",
         "0.0119770912909305",
         "0"
        ],
        [
         "50436",
         "50436",
         "2023-02-10 03:54:00",
         "50436",
         "21808.2",
         "21813.1",
         "21808.0",
         "21812.9",
         "0.0002939999999398",
         "22885.268216312976",
         "22433.788196895526",
         "21744.732271821835",
         "23032.93173611111",
         "22954.593850694448",
         "21896.99536805556",
         "835.5093538089677",
         "1151.909535556962",
         "-316.40018174799434",
         "49.97640277568556",
         "22954.593850694448",
         "23951.352803866943",
         "21957.83489752195",
         "11.860584108226575",
         "268.503",
         "22067.5",
         "0.0116719922614598",
         "0"
        ],
        [
         "50437",
         "50437",
         "2023-02-10 03:55:00",
         "50437",
         "21812.2",
         "21812.3",
         "21805.3",
         "21806.1",
         "0.0005350000014914",
         "22885.05411687516",
         "22433.74460895088",
         "21744.7351128546",
         "23032.72783730159",
         "22954.621079861103",
         "21897.103560185184",
         "835.3993174878015",
         "1151.8606951560564",
         "-316.4613776682549",
         "49.97406228738172",
         "22954.621079861103",
         "23951.21167537665",
         "21958.030484345567",
         "11.860372769729146",
         "268.513",
         "22066.0",
         "0.0119186833042131",
         "0"
        ],
        [
         "50438",
         "50438",
         "2023-02-10 03:56:00",
         "50438",
         "21806.1",
         "21808.7",
         "21804.2",
         "21806.7",
         "0.0006340000145428",
         "22884.840178948987",
         "22433.70106569829",
         "21744.73798153297",
         "23032.523551587303",
         "22954.649034722224",
         "21897.21192824074",
         "835.2893320041403",
         "1151.8118453199093",
         "-316.52251331576895",
         "49.97426901514513",
         "22954.649034722224",
         "23951.065647547686",
         "21958.23242189676",
         "11.860007671873506",
         "268.574",
         "22069.0",
         "0.0120284132858249",
         "0"
        ],
        [
         "50439",
         "50439",
         "2023-02-10 03:57:00",
         "50439",
         "21806.9",
         "21806.9",
         "21797.6",
         "21797.6",
         "0.0006130000087978",
         "22884.62447809015",
         "22433.65689354692",
         "21744.740428791985",
         "23032.317271825395",
         "22954.676690972225",
         "21897.31989351852",
         "835.1787928784033",
         "1151.7629859645444",
         "-316.5841930861411",
         "49.97113692333944",
         "22954.676690972225",
         "23950.92061358539",
         "21958.43276835906",
         "11.85988068736597",
         "268.541",
         "22072.3",
         "0.0126023048408999",
         "0"
        ],
        [
         "50440",
         "50440",
         "2023-02-10 03:58:00",
         "50440",
         "21796.9",
         "21797.8",
         "21790.6",
         "21795.4",
         "0.0004830000048059",
         "22884.40838356023",
         "22433.61257169049",
         "21744.742774088216",
         "23032.10520833333",
         "22954.704125",
         "21897.427613425927",
         "835.0681301899131",
         "1151.7141170723642",
         "-316.6459868824511",
         "49.97037973570284",
         "22954.704125",
         "23950.77682254784",
         "21958.63142745216",
         "11.859649542490606",
         "268.535",
         "22075.8",
         "0.012865099975224",
         "0"
        ],
        [
         "50441",
         "50441",
         "2023-02-10 03:59:00",
         "50441",
         "21794.8",
         "21794.8",
         "21789.4",
         "21792.7",
         "0.0004300000023249",
         "22884.191796240804",
         "22433.568065418367",
         "21744.74499427876",
         "23031.893809523808",
         "22954.7311875",
         "21897.535307870377",
         "834.9573128019256",
         "1151.6652386209685",
         "-316.7079258190429",
         "49.96945044523342",
         "22954.7311875",
         "23950.635235050595",
         "21958.827139949408",
         "11.859358885271236",
         "268.544",
         "22079.1",
         "0.013142015445539",
         "0"
        ],
        [
         "50442",
         "50442",
         "2023-02-10 04:00:00",
         "50442",
         "21792.9",
         "21792.9",
         "21782.9",
         "21786.3",
         "0.0011670000194499",
         "22883.973982175485",
         "22433.52311780784",
         "21744.74691807709",
         "23031.68162698413",
         "22954.75807638889",
         "21897.64285648148",
         "834.8461101696266",
         "1151.6163505523857",
         "-316.7702403827591",
         "49.96724771144056",
         "22954.75807638889",
         "23950.494103397246",
         "21959.022049380532",
         "11.8592666551678",
         "268.611",
         "22080.9",
         "0.0135222594015506",
         "0"
        ],
        [
         "50443",
         "50443",
         "2023-02-10 04:01:00",
         "50443",
         "21786.3",
         "21786.9",
         "21779.0",
         "21779.4",
         "0.000886000018454",
         "22883.75484241114",
         "22433.477694168538",
         "21744.7485223493",
         "23031.469950396822",
         "22954.784625",
         "21897.75022453703",
         "834.7344912005319",
         "1151.5674528038553",
         "-316.8329616033234",
         "49.96487298882218",
         "22954.784625",
         "23950.35451375465",
         "21959.214736245343",
         "11.859070262972605",
         "268.552",
         "22083.1",
         "0.0139443694500306",
         "0"
        ],
        [
         "50444",
         "50444",
         "2023-02-10 04:02:00",
         "50444",
         "21779.7",
         "21780.3",
         "21762.3",
         "21776.9",
         "0.001362000017707",
         "22883.535250140056",
         "22433.43210007845",
         "21744.750010809177",
         "23031.258125",
         "22954.81102430556",
         "21897.85751851852",
         "834.6227301590843",
         "1151.518545354948",
         "-316.89581519586363",
         "49.96401259510495",
         "22954.81102430556",
         "23950.21564171006",
         "21959.406406901053",
         "11.859374872582574",
         "268.543",
         "22081.0",
         "0.0139643383585358",
         "0"
        ],
        [
         "50445",
         "50445",
         "2023-02-10 04:03:00",
         "50445",
         "21776.9",
         "21795.2",
         "21776.6",
         "21791.2",
         "0.0008000000043466",
         "22883.31853845468",
         "22433.3875021756",
         "21744.752161221862",
         "23031.04834325397",
         "22954.837875",
         "21897.96515277778",
         "834.5118739900026",
         "1151.4696283467904",
         "-316.95775435678775",
         "49.96894081084695",
         "22954.837875",
         "23950.07520588434",
         "21959.600544115656",
         "11.859709228987704",
         "268.636",
         "22085.9",
         "0.0135238077756158",
         "0"
        ],
        [
         "50446",
         "50446",
         "2023-02-10 04:04:00",
         "50446",
         "21791.2",
         "21791.6",
         "21781.0",
         "21787.6",
         "0.0007870000044931",
         "22883.10115554853",
         "22433.34265737839",
         "21744.754144872182",
         "23030.83878968254",
         "22954.86602777777",
         "21898.07270138889",
         "834.4008070725868",
         "1151.4207017483377",
         "-317.0198946757507",
         "49.96770177286908",
         "22954.86602777777",
         "23949.925397171643",
         "21959.806658383917",
         "11.859646743410869",
         "268.581",
         "22088.3",
         "0.0138014283353834",
         "0"
        ],
        [
         "50447",
         "50447",
         "2023-02-10 04:05:00",
         "50447",
         "21786.6",
         "21787.8",
         "21768.7",
         "21770.7",
         "0.0013980000308038",
         "22882.880462927653",
         "22433.296642124937",
         "21744.755346041373",
         "23030.62749007937",
         "22954.89396875",
         "21898.17994444444",
         "834.2887006315104",
         "1151.3717654006612",
         "-317.0830647691507",
         "49.96188571066555",
         "22954.89396875",
         "23949.775125016226",
         "21960.01281248377",
         "11.860005887917644",
         "268.613",
         "22090.8",
         "0.0147032479433366",
         "0"
        ]
       ],
       "shape": {
        "columns": 26,
        "rows": 427042
       }
      },
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0.1</th>\n",
       "      <th>Timestamp</th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>ema_7d</th>\n",
       "      <th>ema_20d</th>\n",
       "      <th>...</th>\n",
       "      <th>macd_hist_12_26</th>\n",
       "      <th>rsi_14d</th>\n",
       "      <th>bb_mid_20d</th>\n",
       "      <th>bb_upper_20d</th>\n",
       "      <th>bb_lower_20d</th>\n",
       "      <th>atr_14d</th>\n",
       "      <th>fd_14d</th>\n",
       "      <th>future_close</th>\n",
       "      <th>future_return</th>\n",
       "      <th>future_trend</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>50398</th>\n",
       "      <td>50398</td>\n",
       "      <td>2023-02-10 03:16:00</td>\n",
       "      <td>50398</td>\n",
       "      <td>21851.5</td>\n",
       "      <td>21856.5</td>\n",
       "      <td>21851.2</td>\n",
       "      <td>21853.3</td>\n",
       "      <td>0.000218</td>\n",
       "      <td>22893.243714</td>\n",
       "      <td>22435.379752</td>\n",
       "      <td>...</td>\n",
       "      <td>-314.118075</td>\n",
       "      <td>49.990289</td>\n",
       "      <td>22953.582628</td>\n",
       "      <td>23956.433515</td>\n",
       "      <td>21950.731741</td>\n",
       "      <td>11.869257</td>\n",
       "      <td>268.810</td>\n",
       "      <td>22067.6</td>\n",
       "      <td>0.009806</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50399</th>\n",
       "      <td>50399</td>\n",
       "      <td>2023-02-10 03:17:00</td>\n",
       "      <td>50399</td>\n",
       "      <td>21853.2</td>\n",
       "      <td>21853.2</td>\n",
       "      <td>21851.2</td>\n",
       "      <td>21852.7</td>\n",
       "      <td>0.000121</td>\n",
       "      <td>22893.037277</td>\n",
       "      <td>22435.339289</td>\n",
       "      <td>...</td>\n",
       "      <td>-314.177222</td>\n",
       "      <td>49.990082</td>\n",
       "      <td>22953.610139</td>\n",
       "      <td>23956.296743</td>\n",
       "      <td>21950.923535</td>\n",
       "      <td>11.868773</td>\n",
       "      <td>268.788</td>\n",
       "      <td>22063.4</td>\n",
       "      <td>0.009642</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50400</th>\n",
       "      <td>50400</td>\n",
       "      <td>2023-02-10 03:18:00</td>\n",
       "      <td>50400</td>\n",
       "      <td>21854.3</td>\n",
       "      <td>21855.1</td>\n",
       "      <td>21847.1</td>\n",
       "      <td>21849.9</td>\n",
       "      <td>0.000298</td>\n",
       "      <td>22892.830326</td>\n",
       "      <td>22435.298635</td>\n",
       "      <td>...</td>\n",
       "      <td>-314.236521</td>\n",
       "      <td>49.989119</td>\n",
       "      <td>22953.637677</td>\n",
       "      <td>23956.159451</td>\n",
       "      <td>21951.115903</td>\n",
       "      <td>11.868581</td>\n",
       "      <td>268.716</td>\n",
       "      <td>22066.1</td>\n",
       "      <td>0.009895</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50401</th>\n",
       "      <td>50401</td>\n",
       "      <td>2023-02-10 03:19:00</td>\n",
       "      <td>50401</td>\n",
       "      <td>21849.3</td>\n",
       "      <td>21849.9</td>\n",
       "      <td>21840.3</td>\n",
       "      <td>21841.1</td>\n",
       "      <td>0.000497</td>\n",
       "      <td>22892.621670</td>\n",
       "      <td>22435.257373</td>\n",
       "      <td>...</td>\n",
       "      <td>-314.296345</td>\n",
       "      <td>49.986091</td>\n",
       "      <td>22953.665097</td>\n",
       "      <td>23956.021941</td>\n",
       "      <td>21951.308253</td>\n",
       "      <td>11.868468</td>\n",
       "      <td>268.735</td>\n",
       "      <td>22066.4</td>\n",
       "      <td>0.010315</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50402</th>\n",
       "      <td>50402</td>\n",
       "      <td>2023-02-10 03:20:00</td>\n",
       "      <td>50402</td>\n",
       "      <td>21840.9</td>\n",
       "      <td>21853.0</td>\n",
       "      <td>21840.2</td>\n",
       "      <td>21845.7</td>\n",
       "      <td>0.000385</td>\n",
       "      <td>22892.413968</td>\n",
       "      <td>22435.216433</td>\n",
       "      <td>...</td>\n",
       "      <td>-314.355861</td>\n",
       "      <td>49.987674</td>\n",
       "      <td>22953.692740</td>\n",
       "      <td>23955.883441</td>\n",
       "      <td>21951.502039</td>\n",
       "      <td>11.868515</td>\n",
       "      <td>268.788</td>\n",
       "      <td>22065.9</td>\n",
       "      <td>0.010080</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477435</th>\n",
       "      <td>477435</td>\n",
       "      <td>2023-12-26 08:52:00</td>\n",
       "      <td>477435</td>\n",
       "      <td>42713.7</td>\n",
       "      <td>42713.7</td>\n",
       "      <td>42673.9</td>\n",
       "      <td>42673.9</td>\n",
       "      <td>0.000006</td>\n",
       "      <td>43236.335320</td>\n",
       "      <td>42220.375752</td>\n",
       "      <td>...</td>\n",
       "      <td>-129.358930</td>\n",
       "      <td>50.195507</td>\n",
       "      <td>42839.103142</td>\n",
       "      <td>44760.583892</td>\n",
       "      <td>40917.622393</td>\n",
       "      <td>24.245322</td>\n",
       "      <td>177.714</td>\n",
       "      <td>42429.2</td>\n",
       "      <td>-0.005734</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477436</th>\n",
       "      <td>477436</td>\n",
       "      <td>2023-12-26 08:53:00</td>\n",
       "      <td>477436</td>\n",
       "      <td>42673.9</td>\n",
       "      <td>42673.9</td>\n",
       "      <td>42660.4</td>\n",
       "      <td>42670.3</td>\n",
       "      <td>0.000045</td>\n",
       "      <td>43236.223023</td>\n",
       "      <td>42220.406995</td>\n",
       "      <td>...</td>\n",
       "      <td>-129.418611</td>\n",
       "      <td>50.194924</td>\n",
       "      <td>42839.141597</td>\n",
       "      <td>44760.564502</td>\n",
       "      <td>40917.718692</td>\n",
       "      <td>24.244789</td>\n",
       "      <td>177.730</td>\n",
       "      <td>42428.5</td>\n",
       "      <td>-0.005667</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477437</th>\n",
       "      <td>477437</td>\n",
       "      <td>2023-12-26 08:54:00</td>\n",
       "      <td>477437</td>\n",
       "      <td>42671.0</td>\n",
       "      <td>42675.0</td>\n",
       "      <td>42671.0</td>\n",
       "      <td>42675.0</td>\n",
       "      <td>0.000010</td>\n",
       "      <td>43236.111680</td>\n",
       "      <td>42220.438563</td>\n",
       "      <td>...</td>\n",
       "      <td>-129.477984</td>\n",
       "      <td>50.195679</td>\n",
       "      <td>42839.180219</td>\n",
       "      <td>44760.545209</td>\n",
       "      <td>40917.815229</td>\n",
       "      <td>24.243820</td>\n",
       "      <td>177.705</td>\n",
       "      <td>42422.6</td>\n",
       "      <td>-0.005914</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477438</th>\n",
       "      <td>477438</td>\n",
       "      <td>2023-12-26 08:55:00</td>\n",
       "      <td>477438</td>\n",
       "      <td>42675.0</td>\n",
       "      <td>42681.2</td>\n",
       "      <td>42664.9</td>\n",
       "      <td>42664.9</td>\n",
       "      <td>0.000011</td>\n",
       "      <td>43235.998356</td>\n",
       "      <td>42220.469427</td>\n",
       "      <td>...</td>\n",
       "      <td>-129.537972</td>\n",
       "      <td>50.194044</td>\n",
       "      <td>42839.219028</td>\n",
       "      <td>44760.524782</td>\n",
       "      <td>40917.913273</td>\n",
       "      <td>24.243426</td>\n",
       "      <td>177.683</td>\n",
       "      <td>42433.2</td>\n",
       "      <td>-0.005431</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477439</th>\n",
       "      <td>477439</td>\n",
       "      <td>2023-12-26 08:56:00</td>\n",
       "      <td>477439</td>\n",
       "      <td>42664.9</td>\n",
       "      <td>42674.9</td>\n",
       "      <td>42664.9</td>\n",
       "      <td>42671.8</td>\n",
       "      <td>0.000030</td>\n",
       "      <td>43235.886423</td>\n",
       "      <td>42220.500769</td>\n",
       "      <td>...</td>\n",
       "      <td>-129.597514</td>\n",
       "      <td>50.195152</td>\n",
       "      <td>42839.258316</td>\n",
       "      <td>44760.504098</td>\n",
       "      <td>40918.012534</td>\n",
       "      <td>24.242719</td>\n",
       "      <td>177.564</td>\n",
       "      <td>42447.6</td>\n",
       "      <td>-0.005254</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>427042 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Unnamed: 0.1            Timestamp  Unnamed: 0     Open     High  \\\n",
       "50398          50398  2023-02-10 03:16:00       50398  21851.5  21856.5   \n",
       "50399          50399  2023-02-10 03:17:00       50399  21853.2  21853.2   \n",
       "50400          50400  2023-02-10 03:18:00       50400  21854.3  21855.1   \n",
       "50401          50401  2023-02-10 03:19:00       50401  21849.3  21849.9   \n",
       "50402          50402  2023-02-10 03:20:00       50402  21840.9  21853.0   \n",
       "...              ...                  ...         ...      ...      ...   \n",
       "477435        477435  2023-12-26 08:52:00      477435  42713.7  42713.7   \n",
       "477436        477436  2023-12-26 08:53:00      477436  42673.9  42673.9   \n",
       "477437        477437  2023-12-26 08:54:00      477437  42671.0  42675.0   \n",
       "477438        477438  2023-12-26 08:55:00      477438  42675.0  42681.2   \n",
       "477439        477439  2023-12-26 08:56:00      477439  42664.9  42674.9   \n",
       "\n",
       "            Low    Close    Volume        ema_7d       ema_20d  ...  \\\n",
       "50398   21851.2  21853.3  0.000218  22893.243714  22435.379752  ...   \n",
       "50399   21851.2  21852.7  0.000121  22893.037277  22435.339289  ...   \n",
       "50400   21847.1  21849.9  0.000298  22892.830326  22435.298635  ...   \n",
       "50401   21840.3  21841.1  0.000497  22892.621670  22435.257373  ...   \n",
       "50402   21840.2  21845.7  0.000385  22892.413968  22435.216433  ...   \n",
       "...         ...      ...       ...           ...           ...  ...   \n",
       "477435  42673.9  42673.9  0.000006  43236.335320  42220.375752  ...   \n",
       "477436  42660.4  42670.3  0.000045  43236.223023  42220.406995  ...   \n",
       "477437  42671.0  42675.0  0.000010  43236.111680  42220.438563  ...   \n",
       "477438  42664.9  42664.9  0.000011  43235.998356  42220.469427  ...   \n",
       "477439  42664.9  42671.8  0.000030  43235.886423  42220.500769  ...   \n",
       "\n",
       "        macd_hist_12_26    rsi_14d    bb_mid_20d  bb_upper_20d  bb_lower_20d  \\\n",
       "50398       -314.118075  49.990289  22953.582628  23956.433515  21950.731741   \n",
       "50399       -314.177222  49.990082  22953.610139  23956.296743  21950.923535   \n",
       "50400       -314.236521  49.989119  22953.637677  23956.159451  21951.115903   \n",
       "50401       -314.296345  49.986091  22953.665097  23956.021941  21951.308253   \n",
       "50402       -314.355861  49.987674  22953.692740  23955.883441  21951.502039   \n",
       "...                 ...        ...           ...           ...           ...   \n",
       "477435      -129.358930  50.195507  42839.103142  44760.583892  40917.622393   \n",
       "477436      -129.418611  50.194924  42839.141597  44760.564502  40917.718692   \n",
       "477437      -129.477984  50.195679  42839.180219  44760.545209  40917.815229   \n",
       "477438      -129.537972  50.194044  42839.219028  44760.524782  40917.913273   \n",
       "477439      -129.597514  50.195152  42839.258316  44760.504098  40918.012534   \n",
       "\n",
       "          atr_14d   fd_14d  future_close  future_return  future_trend  \n",
       "50398   11.869257  268.810       22067.6       0.009806             0  \n",
       "50399   11.868773  268.788       22063.4       0.009642             0  \n",
       "50400   11.868581  268.716       22066.1       0.009895             0  \n",
       "50401   11.868468  268.735       22066.4       0.010315             0  \n",
       "50402   11.868515  268.788       22065.9       0.010080             0  \n",
       "...           ...      ...           ...            ...           ...  \n",
       "477435  24.245322  177.714       42429.2      -0.005734             0  \n",
       "477436  24.244789  177.730       42428.5      -0.005667             0  \n",
       "477437  24.243820  177.705       42422.6      -0.005914             0  \n",
       "477438  24.243426  177.683       42433.2      -0.005431             0  \n",
       "477439  24.242719  177.564       42447.6      -0.005254             0  \n",
       "\n",
       "[427042 rows x 26 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(df.head())\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f5720beb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# classification model setup\n",
    "clf_setup = setup(\n",
    "    data=df,\n",
    "    target='future_trend',\n",
    "    session_id=42,\n",
    "    train_size=0.7,\n",
    "    fold_shuffle=True,\n",
    "    fold=12,\n",
    "    verbose=False,\n",
    "    ignore_features=['Unnamed: 0.1', 'Timestamp', 'Unnamed: 0', 'future_close', 'future_return']\n",
    ")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "134c99b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_a7e8d th {\n",
       "  text-align: left;\n",
       "}\n",
       "#T_a7e8d_row0_col0, #T_a7e8d_row0_col3, #T_a7e8d_row1_col0, #T_a7e8d_row1_col4, #T_a7e8d_row1_col5, #T_a7e8d_row1_col6, #T_a7e8d_row1_col7, #T_a7e8d_row2_col0, #T_a7e8d_row2_col1, #T_a7e8d_row2_col2, #T_a7e8d_row2_col3, #T_a7e8d_row2_col4, #T_a7e8d_row2_col5, #T_a7e8d_row2_col6, #T_a7e8d_row2_col7, #T_a7e8d_row3_col0, #T_a7e8d_row3_col1, #T_a7e8d_row3_col2, #T_a7e8d_row3_col3, #T_a7e8d_row3_col4, #T_a7e8d_row3_col5, #T_a7e8d_row3_col6, #T_a7e8d_row3_col7, #T_a7e8d_row4_col0, #T_a7e8d_row4_col1, #T_a7e8d_row4_col2, #T_a7e8d_row4_col3, #T_a7e8d_row4_col4, #T_a7e8d_row4_col5, #T_a7e8d_row4_col6, #T_a7e8d_row4_col7, #T_a7e8d_row5_col0, #T_a7e8d_row5_col1, #T_a7e8d_row5_col2, #T_a7e8d_row5_col3, #T_a7e8d_row5_col4, #T_a7e8d_row5_col5, #T_a7e8d_row5_col6, #T_a7e8d_row5_col7, #T_a7e8d_row6_col0, #T_a7e8d_row6_col1, #T_a7e8d_row6_col2, #T_a7e8d_row6_col3, #T_a7e8d_row6_col4, #T_a7e8d_row6_col5, #T_a7e8d_row6_col6, #T_a7e8d_row6_col7, #T_a7e8d_row7_col0, #T_a7e8d_row7_col1, #T_a7e8d_row7_col2, #T_a7e8d_row7_col3, #T_a7e8d_row7_col4, #T_a7e8d_row7_col5, #T_a7e8d_row7_col6, #T_a7e8d_row7_col7, #T_a7e8d_row8_col0, #T_a7e8d_row8_col1, #T_a7e8d_row8_col2, #T_a7e8d_row8_col3, #T_a7e8d_row8_col4, #T_a7e8d_row8_col5, #T_a7e8d_row8_col6, #T_a7e8d_row8_col7, #T_a7e8d_row9_col0, #T_a7e8d_row9_col1, #T_a7e8d_row9_col2, #T_a7e8d_row9_col3, #T_a7e8d_row9_col4, #T_a7e8d_row9_col5, #T_a7e8d_row9_col6, #T_a7e8d_row9_col7, #T_a7e8d_row10_col0, #T_a7e8d_row10_col1, #T_a7e8d_row10_col2, #T_a7e8d_row10_col3, #T_a7e8d_row10_col4, #T_a7e8d_row10_col5, #T_a7e8d_row10_col6, #T_a7e8d_row10_col7, #T_a7e8d_row11_col0, #T_a7e8d_row11_col1, #T_a7e8d_row11_col2, #T_a7e8d_row11_col3, #T_a7e8d_row11_col4, #T_a7e8d_row11_col5, #T_a7e8d_row11_col6, #T_a7e8d_row11_col7, #T_a7e8d_row12_col0, #T_a7e8d_row12_col1, #T_a7e8d_row12_col2, #T_a7e8d_row12_col3, #T_a7e8d_row12_col4, #T_a7e8d_row12_col5, #T_a7e8d_row12_col6, #T_a7e8d_row12_col7, #T_a7e8d_row13_col0, #T_a7e8d_row13_col1, #T_a7e8d_row13_col2, #T_a7e8d_row13_col3, #T_a7e8d_row13_col4, #T_a7e8d_row13_col5, #T_a7e8d_row13_col6, #T_a7e8d_row13_col7 {\n",
       "  text-align: left;\n",
       "}\n",
       "#T_a7e8d_row0_col1, #T_a7e8d_row0_col2, #T_a7e8d_row0_col4, #T_a7e8d_row0_col5, #T_a7e8d_row0_col6, #T_a7e8d_row0_col7, #T_a7e8d_row1_col1, #T_a7e8d_row1_col2, #T_a7e8d_row1_col3 {\n",
       "  text-align: left;\n",
       "  background-color: yellow;\n",
       "}\n",
       "#T_a7e8d_row0_col8, #T_a7e8d_row1_col8, #T_a7e8d_row2_col8, #T_a7e8d_row3_col8, #T_a7e8d_row4_col8, #T_a7e8d_row5_col8, #T_a7e8d_row6_col8, #T_a7e8d_row7_col8, #T_a7e8d_row8_col8, #T_a7e8d_row10_col8, #T_a7e8d_row11_col8, #T_a7e8d_row12_col8, #T_a7e8d_row13_col8 {\n",
       "  text-align: left;\n",
       "  background-color: lightgrey;\n",
       "}\n",
       "#T_a7e8d_row9_col8 {\n",
       "  text-align: left;\n",
       "  background-color: yellow;\n",
       "  background-color: lightgrey;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_a7e8d\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_a7e8d_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
       "      <th id=\"T_a7e8d_level0_col1\" class=\"col_heading level0 col1\" >Accuracy</th>\n",
       "      <th id=\"T_a7e8d_level0_col2\" class=\"col_heading level0 col2\" >AUC</th>\n",
       "      <th id=\"T_a7e8d_level0_col3\" class=\"col_heading level0 col3\" >Recall</th>\n",
       "      <th id=\"T_a7e8d_level0_col4\" class=\"col_heading level0 col4\" >Prec.</th>\n",
       "      <th id=\"T_a7e8d_level0_col5\" class=\"col_heading level0 col5\" >F1</th>\n",
       "      <th id=\"T_a7e8d_level0_col6\" class=\"col_heading level0 col6\" >Kappa</th>\n",
       "      <th id=\"T_a7e8d_level0_col7\" class=\"col_heading level0 col7\" >MCC</th>\n",
       "      <th id=\"T_a7e8d_level0_col8\" class=\"col_heading level0 col8\" >TT (Sec)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_a7e8d_level0_row0\" class=\"row_heading level0 row0\" >rf</th>\n",
       "      <td id=\"T_a7e8d_row0_col0\" class=\"data row0 col0\" >Random Forest Classifier</td>\n",
       "      <td id=\"T_a7e8d_row0_col1\" class=\"data row0 col1\" >0.9976</td>\n",
       "      <td id=\"T_a7e8d_row0_col2\" class=\"data row0 col2\" >0.9997</td>\n",
       "      <td id=\"T_a7e8d_row0_col3\" class=\"data row0 col3\" >0.9949</td>\n",
       "      <td id=\"T_a7e8d_row0_col4\" class=\"data row0 col4\" >0.9958</td>\n",
       "      <td id=\"T_a7e8d_row0_col5\" class=\"data row0 col5\" >0.9954</td>\n",
       "      <td id=\"T_a7e8d_row0_col6\" class=\"data row0 col6\" >0.9938</td>\n",
       "      <td id=\"T_a7e8d_row0_col7\" class=\"data row0 col7\" >0.9938</td>\n",
       "      <td id=\"T_a7e8d_row0_col8\" class=\"data row0 col8\" >9.2542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a7e8d_level0_row1\" class=\"row_heading level0 row1\" >et</th>\n",
       "      <td id=\"T_a7e8d_row1_col0\" class=\"data row1 col0\" >Extra Trees Classifier</td>\n",
       "      <td id=\"T_a7e8d_row1_col1\" class=\"data row1 col1\" >0.9976</td>\n",
       "      <td id=\"T_a7e8d_row1_col2\" class=\"data row1 col2\" >0.9997</td>\n",
       "      <td id=\"T_a7e8d_row1_col3\" class=\"data row1 col3\" >0.9951</td>\n",
       "      <td id=\"T_a7e8d_row1_col4\" class=\"data row1 col4\" >0.9955</td>\n",
       "      <td id=\"T_a7e8d_row1_col5\" class=\"data row1 col5\" >0.9953</td>\n",
       "      <td id=\"T_a7e8d_row1_col6\" class=\"data row1 col6\" >0.9937</td>\n",
       "      <td id=\"T_a7e8d_row1_col7\" class=\"data row1 col7\" >0.9937</td>\n",
       "      <td id=\"T_a7e8d_row1_col8\" class=\"data row1 col8\" >2.0508</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a7e8d_level0_row2\" class=\"row_heading level0 row2\" >dt</th>\n",
       "      <td id=\"T_a7e8d_row2_col0\" class=\"data row2 col0\" >Decision Tree Classifier</td>\n",
       "      <td id=\"T_a7e8d_row2_col1\" class=\"data row2 col1\" >0.9965</td>\n",
       "      <td id=\"T_a7e8d_row2_col2\" class=\"data row2 col2\" >0.9953</td>\n",
       "      <td id=\"T_a7e8d_row2_col3\" class=\"data row2 col3\" >0.9930</td>\n",
       "      <td id=\"T_a7e8d_row2_col4\" class=\"data row2 col4\" >0.9932</td>\n",
       "      <td id=\"T_a7e8d_row2_col5\" class=\"data row2 col5\" >0.9931</td>\n",
       "      <td id=\"T_a7e8d_row2_col6\" class=\"data row2 col6\" >0.9907</td>\n",
       "      <td id=\"T_a7e8d_row2_col7\" class=\"data row2 col7\" >0.9907</td>\n",
       "      <td id=\"T_a7e8d_row2_col8\" class=\"data row2 col8\" >0.8375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a7e8d_level0_row3\" class=\"row_heading level0 row3\" >knn</th>\n",
       "      <td id=\"T_a7e8d_row3_col0\" class=\"data row3 col0\" >K Neighbors Classifier</td>\n",
       "      <td id=\"T_a7e8d_row3_col1\" class=\"data row3 col1\" >0.9947</td>\n",
       "      <td id=\"T_a7e8d_row3_col2\" class=\"data row3 col2\" >0.9985</td>\n",
       "      <td id=\"T_a7e8d_row3_col3\" class=\"data row3 col3\" >0.9894</td>\n",
       "      <td id=\"T_a7e8d_row3_col4\" class=\"data row3 col4\" >0.9900</td>\n",
       "      <td id=\"T_a7e8d_row3_col5\" class=\"data row3 col5\" >0.9897</td>\n",
       "      <td id=\"T_a7e8d_row3_col6\" class=\"data row3 col6\" >0.9861</td>\n",
       "      <td id=\"T_a7e8d_row3_col7\" class=\"data row3 col7\" >0.9861</td>\n",
       "      <td id=\"T_a7e8d_row3_col8\" class=\"data row3 col8\" >4.8333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a7e8d_level0_row4\" class=\"row_heading level0 row4\" >lightgbm</th>\n",
       "      <td id=\"T_a7e8d_row4_col0\" class=\"data row4 col0\" >Light Gradient Boosting Machine</td>\n",
       "      <td id=\"T_a7e8d_row4_col1\" class=\"data row4 col1\" >0.9924</td>\n",
       "      <td id=\"T_a7e8d_row4_col2\" class=\"data row4 col2\" >0.9995</td>\n",
       "      <td id=\"T_a7e8d_row4_col3\" class=\"data row4 col3\" >0.9839</td>\n",
       "      <td id=\"T_a7e8d_row4_col4\" class=\"data row4 col4\" >0.9863</td>\n",
       "      <td id=\"T_a7e8d_row4_col5\" class=\"data row4 col5\" >0.9851</td>\n",
       "      <td id=\"T_a7e8d_row4_col6\" class=\"data row4 col6\" >0.9800</td>\n",
       "      <td id=\"T_a7e8d_row4_col7\" class=\"data row4 col7\" >0.9800</td>\n",
       "      <td id=\"T_a7e8d_row4_col8\" class=\"data row4 col8\" >0.5842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a7e8d_level0_row5\" class=\"row_heading level0 row5\" >gbc</th>\n",
       "      <td id=\"T_a7e8d_row5_col0\" class=\"data row5 col0\" >Gradient Boosting Classifier</td>\n",
       "      <td id=\"T_a7e8d_row5_col1\" class=\"data row5 col1\" >0.9687</td>\n",
       "      <td id=\"T_a7e8d_row5_col2\" class=\"data row5 col2\" >0.9952</td>\n",
       "      <td id=\"T_a7e8d_row5_col3\" class=\"data row5 col3\" >0.8877</td>\n",
       "      <td id=\"T_a7e8d_row5_col4\" class=\"data row5 col4\" >0.9887</td>\n",
       "      <td id=\"T_a7e8d_row5_col5\" class=\"data row5 col5\" >0.9355</td>\n",
       "      <td id=\"T_a7e8d_row5_col6\" class=\"data row5 col6\" >0.9149</td>\n",
       "      <td id=\"T_a7e8d_row5_col7\" class=\"data row5 col7\" >0.9172</td>\n",
       "      <td id=\"T_a7e8d_row5_col8\" class=\"data row5 col8\" >18.9433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a7e8d_level0_row6\" class=\"row_heading level0 row6\" >ada</th>\n",
       "      <td id=\"T_a7e8d_row6_col0\" class=\"data row6 col0\" >Ada Boost Classifier</td>\n",
       "      <td id=\"T_a7e8d_row6_col1\" class=\"data row6 col1\" >0.9329</td>\n",
       "      <td id=\"T_a7e8d_row6_col2\" class=\"data row6 col2\" >0.9744</td>\n",
       "      <td id=\"T_a7e8d_row6_col3\" class=\"data row6 col3\" >0.7744</td>\n",
       "      <td id=\"T_a7e8d_row6_col4\" class=\"data row6 col4\" >0.9546</td>\n",
       "      <td id=\"T_a7e8d_row6_col5\" class=\"data row6 col5\" >0.8551</td>\n",
       "      <td id=\"T_a7e8d_row6_col6\" class=\"data row6 col6\" >0.8121</td>\n",
       "      <td id=\"T_a7e8d_row6_col7\" class=\"data row6 col7\" >0.8196</td>\n",
       "      <td id=\"T_a7e8d_row6_col8\" class=\"data row6 col8\" >4.2675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a7e8d_level0_row7\" class=\"row_heading level0 row7\" >ridge</th>\n",
       "      <td id=\"T_a7e8d_row7_col0\" class=\"data row7 col0\" >Ridge Classifier</td>\n",
       "      <td id=\"T_a7e8d_row7_col1\" class=\"data row7 col1\" >0.7502</td>\n",
       "      <td id=\"T_a7e8d_row7_col2\" class=\"data row7 col2\" >0.6750</td>\n",
       "      <td id=\"T_a7e8d_row7_col3\" class=\"data row7 col3\" >0.0346</td>\n",
       "      <td id=\"T_a7e8d_row7_col4\" class=\"data row7 col4\" >0.7311</td>\n",
       "      <td id=\"T_a7e8d_row7_col5\" class=\"data row7 col5\" >0.0660</td>\n",
       "      <td id=\"T_a7e8d_row7_col6\" class=\"data row7 col6\" >0.0440</td>\n",
       "      <td id=\"T_a7e8d_row7_col7\" class=\"data row7 col7\" >0.1206</td>\n",
       "      <td id=\"T_a7e8d_row7_col8\" class=\"data row7 col8\" >0.1033</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a7e8d_level0_row8\" class=\"row_heading level0 row8\" >lr</th>\n",
       "      <td id=\"T_a7e8d_row8_col0\" class=\"data row8 col0\" >Logistic Regression</td>\n",
       "      <td id=\"T_a7e8d_row8_col1\" class=\"data row8 col1\" >0.7457</td>\n",
       "      <td id=\"T_a7e8d_row8_col2\" class=\"data row8 col2\" >0.6766</td>\n",
       "      <td id=\"T_a7e8d_row8_col3\" class=\"data row8 col3\" >0.0514</td>\n",
       "      <td id=\"T_a7e8d_row8_col4\" class=\"data row8 col4\" >0.5124</td>\n",
       "      <td id=\"T_a7e8d_row8_col5\" class=\"data row8 col5\" >0.0932</td>\n",
       "      <td id=\"T_a7e8d_row8_col6\" class=\"data row8 col6\" >0.0500</td>\n",
       "      <td id=\"T_a7e8d_row8_col7\" class=\"data row8 col7\" >0.0962</td>\n",
       "      <td id=\"T_a7e8d_row8_col8\" class=\"data row8 col8\" >3.7500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a7e8d_level0_row9\" class=\"row_heading level0 row9\" >dummy</th>\n",
       "      <td id=\"T_a7e8d_row9_col0\" class=\"data row9 col0\" >Dummy Classifier</td>\n",
       "      <td id=\"T_a7e8d_row9_col1\" class=\"data row9 col1\" >0.7446</td>\n",
       "      <td id=\"T_a7e8d_row9_col2\" class=\"data row9 col2\" >0.5000</td>\n",
       "      <td id=\"T_a7e8d_row9_col3\" class=\"data row9 col3\" >0.0000</td>\n",
       "      <td id=\"T_a7e8d_row9_col4\" class=\"data row9 col4\" >0.0000</td>\n",
       "      <td id=\"T_a7e8d_row9_col5\" class=\"data row9 col5\" >0.0000</td>\n",
       "      <td id=\"T_a7e8d_row9_col6\" class=\"data row9 col6\" >0.0000</td>\n",
       "      <td id=\"T_a7e8d_row9_col7\" class=\"data row9 col7\" >0.0000</td>\n",
       "      <td id=\"T_a7e8d_row9_col8\" class=\"data row9 col8\" >0.0592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a7e8d_level0_row10\" class=\"row_heading level0 row10\" >lda</th>\n",
       "      <td id=\"T_a7e8d_row10_col0\" class=\"data row10 col0\" >Linear Discriminant Analysis</td>\n",
       "      <td id=\"T_a7e8d_row10_col1\" class=\"data row10 col1\" >0.7445</td>\n",
       "      <td id=\"T_a7e8d_row10_col2\" class=\"data row10 col2\" >0.6597</td>\n",
       "      <td id=\"T_a7e8d_row10_col3\" class=\"data row10 col3\" >0.0005</td>\n",
       "      <td id=\"T_a7e8d_row10_col4\" class=\"data row10 col4\" >0.3719</td>\n",
       "      <td id=\"T_a7e8d_row10_col5\" class=\"data row10 col5\" >0.0009</td>\n",
       "      <td id=\"T_a7e8d_row10_col6\" class=\"data row10 col6\" >0.0003</td>\n",
       "      <td id=\"T_a7e8d_row10_col7\" class=\"data row10 col7\" >0.0045</td>\n",
       "      <td id=\"T_a7e8d_row10_col8\" class=\"data row10 col8\" >0.1133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a7e8d_level0_row11\" class=\"row_heading level0 row11\" >nb</th>\n",
       "      <td id=\"T_a7e8d_row11_col0\" class=\"data row11 col0\" >Naive Bayes</td>\n",
       "      <td id=\"T_a7e8d_row11_col1\" class=\"data row11 col1\" >0.6897</td>\n",
       "      <td id=\"T_a7e8d_row11_col2\" class=\"data row11 col2\" >0.6868</td>\n",
       "      <td id=\"T_a7e8d_row11_col3\" class=\"data row11 col3\" >0.3519</td>\n",
       "      <td id=\"T_a7e8d_row11_col4\" class=\"data row11 col4\" >0.3830</td>\n",
       "      <td id=\"T_a7e8d_row11_col5\" class=\"data row11 col5\" >0.3668</td>\n",
       "      <td id=\"T_a7e8d_row11_col6\" class=\"data row11 col6\" >0.1617</td>\n",
       "      <td id=\"T_a7e8d_row11_col7\" class=\"data row11 col7\" >0.1620</td>\n",
       "      <td id=\"T_a7e8d_row11_col8\" class=\"data row11 col8\" >0.0675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a7e8d_level0_row12\" class=\"row_heading level0 row12\" >svm</th>\n",
       "      <td id=\"T_a7e8d_row12_col0\" class=\"data row12 col0\" >SVM - Linear Kernel</td>\n",
       "      <td id=\"T_a7e8d_row12_col1\" class=\"data row12 col1\" >0.6101</td>\n",
       "      <td id=\"T_a7e8d_row12_col2\" class=\"data row12 col2\" >0.6711</td>\n",
       "      <td id=\"T_a7e8d_row12_col3\" class=\"data row12 col3\" >0.4280</td>\n",
       "      <td id=\"T_a7e8d_row12_col4\" class=\"data row12 col4\" >0.4620</td>\n",
       "      <td id=\"T_a7e8d_row12_col5\" class=\"data row12 col5\" >0.2612</td>\n",
       "      <td id=\"T_a7e8d_row12_col6\" class=\"data row12 col6\" >0.0860</td>\n",
       "      <td id=\"T_a7e8d_row12_col7\" class=\"data row12 col7\" >0.1301</td>\n",
       "      <td id=\"T_a7e8d_row12_col8\" class=\"data row12 col8\" >3.9725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a7e8d_level0_row13\" class=\"row_heading level0 row13\" >qda</th>\n",
       "      <td id=\"T_a7e8d_row13_col0\" class=\"data row13 col0\" >Quadratic Discriminant Analysis</td>\n",
       "      <td id=\"T_a7e8d_row13_col1\" class=\"data row13 col1\" >0.2618</td>\n",
       "      <td id=\"T_a7e8d_row13_col2\" class=\"data row13 col2\" >0.6267</td>\n",
       "      <td id=\"T_a7e8d_row13_col3\" class=\"data row13 col3\" >0.9925</td>\n",
       "      <td id=\"T_a7e8d_row13_col4\" class=\"data row13 col4\" >0.2561</td>\n",
       "      <td id=\"T_a7e8d_row13_col5\" class=\"data row13 col5\" >0.4072</td>\n",
       "      <td id=\"T_a7e8d_row13_col6\" class=\"data row13 col6\" >0.0019</td>\n",
       "      <td id=\"T_a7e8d_row13_col7\" class=\"data row13 col7\" >0.0153</td>\n",
       "      <td id=\"T_a7e8d_row13_col8\" class=\"data row13 col8\" >0.1833</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x1153a2cccd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                    Model  Accuracy     AUC  Recall   Prec.  \\\n",
      "rf               Random Forest Classifier    0.9976  0.9997  0.9949  0.9958   \n",
      "et                 Extra Trees Classifier    0.9976  0.9997  0.9951  0.9955   \n",
      "dt               Decision Tree Classifier    0.9965  0.9953  0.9930  0.9932   \n",
      "knn                K Neighbors Classifier    0.9947  0.9985  0.9894  0.9900   \n",
      "lightgbm  Light Gradient Boosting Machine    0.9924  0.9995  0.9839  0.9863   \n",
      "gbc          Gradient Boosting Classifier    0.9687  0.9952  0.8877  0.9887   \n",
      "ada                  Ada Boost Classifier    0.9329  0.9744  0.7744  0.9546   \n",
      "ridge                    Ridge Classifier    0.7502  0.6750  0.0346  0.7311   \n",
      "lr                    Logistic Regression    0.7457  0.6766  0.0514  0.5124   \n",
      "dummy                    Dummy Classifier    0.7446  0.5000  0.0000  0.0000   \n",
      "lda          Linear Discriminant Analysis    0.7445  0.6597  0.0005  0.3719   \n",
      "nb                            Naive Bayes    0.6897  0.6868  0.3519  0.3830   \n",
      "svm                   SVM - Linear Kernel    0.6101  0.6711  0.4280  0.4620   \n",
      "qda       Quadratic Discriminant Analysis    0.2618  0.6267  0.9925  0.2561   \n",
      "\n",
      "              F1   Kappa     MCC  TT (Sec)  \n",
      "rf        0.9954  0.9938  0.9938    9.2542  \n",
      "et        0.9953  0.9937  0.9937    2.0508  \n",
      "dt        0.9931  0.9907  0.9907    0.8375  \n",
      "knn       0.9897  0.9861  0.9861    4.8333  \n",
      "lightgbm  0.9851  0.9800  0.9800    0.5842  \n",
      "gbc       0.9355  0.9149  0.9172   18.9433  \n",
      "ada       0.8551  0.8121  0.8196    4.2675  \n",
      "ridge     0.0660  0.0440  0.1206    0.1033  \n",
      "lr        0.0932  0.0500  0.0962    3.7500  \n",
      "dummy     0.0000  0.0000  0.0000    0.0592  \n",
      "lda       0.0009  0.0003  0.0045    0.1133  \n",
      "nb        0.3668  0.1617  0.1620    0.0675  \n",
      "svm       0.2612  0.0860  0.1301    3.9725  \n",
      "qda       0.4072  0.0019  0.0153    0.1833  \n"
     ]
    }
   ],
   "source": [
    "top_models = compare_models(n_select=5)\n",
    "\n",
    "results = pull()\n",
    "print(results)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "627f7a90",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_2d9a2_row12_col0, #T_2d9a2_row12_col1, #T_2d9a2_row12_col2, #T_2d9a2_row12_col3, #T_2d9a2_row12_col4, #T_2d9a2_row12_col5, #T_2d9a2_row12_col6 {\n",
       "  background: yellow;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_2d9a2\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_2d9a2_level0_col0\" class=\"col_heading level0 col0\" >Accuracy</th>\n",
       "      <th id=\"T_2d9a2_level0_col1\" class=\"col_heading level0 col1\" >AUC</th>\n",
       "      <th id=\"T_2d9a2_level0_col2\" class=\"col_heading level0 col2\" >Recall</th>\n",
       "      <th id=\"T_2d9a2_level0_col3\" class=\"col_heading level0 col3\" >Prec.</th>\n",
       "      <th id=\"T_2d9a2_level0_col4\" class=\"col_heading level0 col4\" >F1</th>\n",
       "      <th id=\"T_2d9a2_level0_col5\" class=\"col_heading level0 col5\" >Kappa</th>\n",
       "      <th id=\"T_2d9a2_level0_col6\" class=\"col_heading level0 col6\" >MCC</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th class=\"index_name level0\" >Fold</th>\n",
       "      <th class=\"blank col0\" >&nbsp;</th>\n",
       "      <th class=\"blank col1\" >&nbsp;</th>\n",
       "      <th class=\"blank col2\" >&nbsp;</th>\n",
       "      <th class=\"blank col3\" >&nbsp;</th>\n",
       "      <th class=\"blank col4\" >&nbsp;</th>\n",
       "      <th class=\"blank col5\" >&nbsp;</th>\n",
       "      <th class=\"blank col6\" >&nbsp;</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_2d9a2_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
       "      <td id=\"T_2d9a2_row0_col0\" class=\"data row0 col0\" >0.9762</td>\n",
       "      <td id=\"T_2d9a2_row0_col1\" class=\"data row0 col1\" >0.9986</td>\n",
       "      <td id=\"T_2d9a2_row0_col2\" class=\"data row0 col2\" >0.9101</td>\n",
       "      <td id=\"T_2d9a2_row0_col3\" class=\"data row0 col3\" >0.9964</td>\n",
       "      <td id=\"T_2d9a2_row0_col4\" class=\"data row0 col4\" >0.9513</td>\n",
       "      <td id=\"T_2d9a2_row0_col5\" class=\"data row0 col5\" >0.9356</td>\n",
       "      <td id=\"T_2d9a2_row0_col6\" class=\"data row0 col6\" >0.9373</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_2d9a2_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
       "      <td id=\"T_2d9a2_row1_col0\" class=\"data row1 col0\" >0.9765</td>\n",
       "      <td id=\"T_2d9a2_row1_col1\" class=\"data row1 col1\" >0.9989</td>\n",
       "      <td id=\"T_2d9a2_row1_col2\" class=\"data row1 col2\" >0.9106</td>\n",
       "      <td id=\"T_2d9a2_row1_col3\" class=\"data row1 col3\" >0.9971</td>\n",
       "      <td id=\"T_2d9a2_row1_col4\" class=\"data row1 col4\" >0.9519</td>\n",
       "      <td id=\"T_2d9a2_row1_col5\" class=\"data row1 col5\" >0.9363</td>\n",
       "      <td id=\"T_2d9a2_row1_col6\" class=\"data row1 col6\" >0.9380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_2d9a2_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
       "      <td id=\"T_2d9a2_row2_col0\" class=\"data row2 col0\" >0.9762</td>\n",
       "      <td id=\"T_2d9a2_row2_col1\" class=\"data row2 col1\" >0.9987</td>\n",
       "      <td id=\"T_2d9a2_row2_col2\" class=\"data row2 col2\" >0.9099</td>\n",
       "      <td id=\"T_2d9a2_row2_col3\" class=\"data row2 col3\" >0.9967</td>\n",
       "      <td id=\"T_2d9a2_row2_col4\" class=\"data row2 col4\" >0.9514</td>\n",
       "      <td id=\"T_2d9a2_row2_col5\" class=\"data row2 col5\" >0.9357</td>\n",
       "      <td id=\"T_2d9a2_row2_col6\" class=\"data row2 col6\" >0.9374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_2d9a2_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
       "      <td id=\"T_2d9a2_row3_col0\" class=\"data row3 col0\" >0.9758</td>\n",
       "      <td id=\"T_2d9a2_row3_col1\" class=\"data row3 col1\" >0.9987</td>\n",
       "      <td id=\"T_2d9a2_row3_col2\" class=\"data row3 col2\" >0.9088</td>\n",
       "      <td id=\"T_2d9a2_row3_col3\" class=\"data row3 col3\" >0.9959</td>\n",
       "      <td id=\"T_2d9a2_row3_col4\" class=\"data row3 col4\" >0.9504</td>\n",
       "      <td id=\"T_2d9a2_row3_col5\" class=\"data row3 col5\" >0.9344</td>\n",
       "      <td id=\"T_2d9a2_row3_col6\" class=\"data row3 col6\" >0.9361</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_2d9a2_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
       "      <td id=\"T_2d9a2_row4_col0\" class=\"data row4 col0\" >0.9780</td>\n",
       "      <td id=\"T_2d9a2_row4_col1\" class=\"data row4 col1\" >0.9986</td>\n",
       "      <td id=\"T_2d9a2_row4_col2\" class=\"data row4 col2\" >0.9180</td>\n",
       "      <td id=\"T_2d9a2_row4_col3\" class=\"data row4 col3\" >0.9957</td>\n",
       "      <td id=\"T_2d9a2_row4_col4\" class=\"data row4 col4\" >0.9553</td>\n",
       "      <td id=\"T_2d9a2_row4_col5\" class=\"data row4 col5\" >0.9408</td>\n",
       "      <td id=\"T_2d9a2_row4_col6\" class=\"data row4 col6\" >0.9421</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_2d9a2_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
       "      <td id=\"T_2d9a2_row5_col0\" class=\"data row5 col0\" >0.9785</td>\n",
       "      <td id=\"T_2d9a2_row5_col1\" class=\"data row5 col1\" >0.9989</td>\n",
       "      <td id=\"T_2d9a2_row5_col2\" class=\"data row5 col2\" >0.9191</td>\n",
       "      <td id=\"T_2d9a2_row5_col3\" class=\"data row5 col3\" >0.9964</td>\n",
       "      <td id=\"T_2d9a2_row5_col4\" class=\"data row5 col4\" >0.9562</td>\n",
       "      <td id=\"T_2d9a2_row5_col5\" class=\"data row5 col5\" >0.9420</td>\n",
       "      <td id=\"T_2d9a2_row5_col6\" class=\"data row5 col6\" >0.9433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_2d9a2_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
       "      <td id=\"T_2d9a2_row6_col0\" class=\"data row6 col0\" >0.9772</td>\n",
       "      <td id=\"T_2d9a2_row6_col1\" class=\"data row6 col1\" >0.9987</td>\n",
       "      <td id=\"T_2d9a2_row6_col2\" class=\"data row6 col2\" >0.9132</td>\n",
       "      <td id=\"T_2d9a2_row6_col3\" class=\"data row6 col3\" >0.9974</td>\n",
       "      <td id=\"T_2d9a2_row6_col4\" class=\"data row6 col4\" >0.9535</td>\n",
       "      <td id=\"T_2d9a2_row6_col5\" class=\"data row6 col5\" >0.9385</td>\n",
       "      <td id=\"T_2d9a2_row6_col6\" class=\"data row6 col6\" >0.9401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_2d9a2_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
       "      <td id=\"T_2d9a2_row7_col0\" class=\"data row7 col0\" >0.9788</td>\n",
       "      <td id=\"T_2d9a2_row7_col1\" class=\"data row7 col1\" >0.9989</td>\n",
       "      <td id=\"T_2d9a2_row7_col2\" class=\"data row7 col2\" >0.9216</td>\n",
       "      <td id=\"T_2d9a2_row7_col3\" class=\"data row7 col3\" >0.9949</td>\n",
       "      <td id=\"T_2d9a2_row7_col4\" class=\"data row7 col4\" >0.9568</td>\n",
       "      <td id=\"T_2d9a2_row7_col5\" class=\"data row7 col5\" >0.9428</td>\n",
       "      <td id=\"T_2d9a2_row7_col6\" class=\"data row7 col6\" >0.9440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_2d9a2_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
       "      <td id=\"T_2d9a2_row8_col0\" class=\"data row8 col0\" >0.9750</td>\n",
       "      <td id=\"T_2d9a2_row8_col1\" class=\"data row8 col1\" >0.9984</td>\n",
       "      <td id=\"T_2d9a2_row8_col2\" class=\"data row8 col2\" >0.9043</td>\n",
       "      <td id=\"T_2d9a2_row8_col3\" class=\"data row8 col3\" >0.9976</td>\n",
       "      <td id=\"T_2d9a2_row8_col4\" class=\"data row8 col4\" >0.9486</td>\n",
       "      <td id=\"T_2d9a2_row8_col5\" class=\"data row8 col5\" >0.9322</td>\n",
       "      <td id=\"T_2d9a2_row8_col6\" class=\"data row8 col6\" >0.9341</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_2d9a2_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
       "      <td id=\"T_2d9a2_row9_col0\" class=\"data row9 col0\" >0.9786</td>\n",
       "      <td id=\"T_2d9a2_row9_col1\" class=\"data row9 col1\" >0.9987</td>\n",
       "      <td id=\"T_2d9a2_row9_col2\" class=\"data row9 col2\" >0.9194</td>\n",
       "      <td id=\"T_2d9a2_row9_col3\" class=\"data row9 col3\" >0.9964</td>\n",
       "      <td id=\"T_2d9a2_row9_col4\" class=\"data row9 col4\" >0.9563</td>\n",
       "      <td id=\"T_2d9a2_row9_col5\" class=\"data row9 col5\" >0.9422</td>\n",
       "      <td id=\"T_2d9a2_row9_col6\" class=\"data row9 col6\" >0.9435</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_2d9a2_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n",
       "      <td id=\"T_2d9a2_row10_col0\" class=\"data row10 col0\" >0.9788</td>\n",
       "      <td id=\"T_2d9a2_row10_col1\" class=\"data row10 col1\" >0.9985</td>\n",
       "      <td id=\"T_2d9a2_row10_col2\" class=\"data row10 col2\" >0.9194</td>\n",
       "      <td id=\"T_2d9a2_row10_col3\" class=\"data row10 col3\" >0.9973</td>\n",
       "      <td id=\"T_2d9a2_row10_col4\" class=\"data row10 col4\" >0.9567</td>\n",
       "      <td id=\"T_2d9a2_row10_col5\" class=\"data row10 col5\" >0.9427</td>\n",
       "      <td id=\"T_2d9a2_row10_col6\" class=\"data row10 col6\" >0.9441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_2d9a2_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n",
       "      <td id=\"T_2d9a2_row11_col0\" class=\"data row11 col0\" >0.9776</td>\n",
       "      <td id=\"T_2d9a2_row11_col1\" class=\"data row11 col1\" >0.9988</td>\n",
       "      <td id=\"T_2d9a2_row11_col2\" class=\"data row11 col2\" >0.9150</td>\n",
       "      <td id=\"T_2d9a2_row11_col3\" class=\"data row11 col3\" >0.9969</td>\n",
       "      <td id=\"T_2d9a2_row11_col4\" class=\"data row11 col4\" >0.9542</td>\n",
       "      <td id=\"T_2d9a2_row11_col5\" class=\"data row11 col5\" >0.9394</td>\n",
       "      <td id=\"T_2d9a2_row11_col6\" class=\"data row11 col6\" >0.9409</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_2d9a2_level0_row12\" class=\"row_heading level0 row12\" >Mean</th>\n",
       "      <td id=\"T_2d9a2_row12_col0\" class=\"data row12 col0\" >0.9773</td>\n",
       "      <td id=\"T_2d9a2_row12_col1\" class=\"data row12 col1\" >0.9987</td>\n",
       "      <td id=\"T_2d9a2_row12_col2\" class=\"data row12 col2\" >0.9141</td>\n",
       "      <td id=\"T_2d9a2_row12_col3\" class=\"data row12 col3\" >0.9966</td>\n",
       "      <td id=\"T_2d9a2_row12_col4\" class=\"data row12 col4\" >0.9535</td>\n",
       "      <td id=\"T_2d9a2_row12_col5\" class=\"data row12 col5\" >0.9385</td>\n",
       "      <td id=\"T_2d9a2_row12_col6\" class=\"data row12 col6\" >0.9401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_2d9a2_level0_row13\" class=\"row_heading level0 row13\" >Std</th>\n",
       "      <td id=\"T_2d9a2_row13_col0\" class=\"data row13 col0\" >0.0012</td>\n",
       "      <td id=\"T_2d9a2_row13_col1\" class=\"data row13 col1\" >0.0001</td>\n",
       "      <td id=\"T_2d9a2_row13_col2\" class=\"data row13 col2\" >0.0052</td>\n",
       "      <td id=\"T_2d9a2_row13_col3\" class=\"data row13 col3\" >0.0007</td>\n",
       "      <td id=\"T_2d9a2_row13_col4\" class=\"data row13 col4\" >0.0027</td>\n",
       "      <td id=\"T_2d9a2_row13_col5\" class=\"data row13 col5\" >0.0035</td>\n",
       "      <td id=\"T_2d9a2_row13_col6\" class=\"data row13 col6\" >0.0033</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x115444ec510>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 12 folds for each of 10 candidates, totalling 120 fits\n",
      "Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).\n"
     ]
    },
    {
     "data": {
      "text/html": [],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_4f03b_row12_col0, #T_4f03b_row12_col1, #T_4f03b_row12_col2, #T_4f03b_row12_col3, #T_4f03b_row12_col4, #T_4f03b_row12_col5, #T_4f03b_row12_col6 {\n",
       "  background: yellow;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_4f03b\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_4f03b_level0_col0\" class=\"col_heading level0 col0\" >Accuracy</th>\n",
       "      <th id=\"T_4f03b_level0_col1\" class=\"col_heading level0 col1\" >AUC</th>\n",
       "      <th id=\"T_4f03b_level0_col2\" class=\"col_heading level0 col2\" >Recall</th>\n",
       "      <th id=\"T_4f03b_level0_col3\" class=\"col_heading level0 col3\" >Prec.</th>\n",
       "      <th id=\"T_4f03b_level0_col4\" class=\"col_heading level0 col4\" >F1</th>\n",
       "      <th id=\"T_4f03b_level0_col5\" class=\"col_heading level0 col5\" >Kappa</th>\n",
       "      <th id=\"T_4f03b_level0_col6\" class=\"col_heading level0 col6\" >MCC</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th class=\"index_name level0\" >Fold</th>\n",
       "      <th class=\"blank col0\" >&nbsp;</th>\n",
       "      <th class=\"blank col1\" >&nbsp;</th>\n",
       "      <th class=\"blank col2\" >&nbsp;</th>\n",
       "      <th class=\"blank col3\" >&nbsp;</th>\n",
       "      <th class=\"blank col4\" >&nbsp;</th>\n",
       "      <th class=\"blank col5\" >&nbsp;</th>\n",
       "      <th class=\"blank col6\" >&nbsp;</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_4f03b_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
       "      <td id=\"T_4f03b_row0_col0\" class=\"data row0 col0\" >0.9550</td>\n",
       "      <td id=\"T_4f03b_row0_col1\" class=\"data row0 col1\" >0.9943</td>\n",
       "      <td id=\"T_4f03b_row0_col2\" class=\"data row0 col2\" >0.8273</td>\n",
       "      <td id=\"T_4f03b_row0_col3\" class=\"data row0 col3\" >0.9958</td>\n",
       "      <td id=\"T_4f03b_row0_col4\" class=\"data row0 col4\" >0.9038</td>\n",
       "      <td id=\"T_4f03b_row0_col5\" class=\"data row0 col5\" >0.8747</td>\n",
       "      <td id=\"T_4f03b_row0_col6\" class=\"data row0 col6\" >0.8811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4f03b_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
       "      <td id=\"T_4f03b_row1_col0\" class=\"data row1 col0\" >0.9513</td>\n",
       "      <td id=\"T_4f03b_row1_col1\" class=\"data row1 col1\" >0.9948</td>\n",
       "      <td id=\"T_4f03b_row1_col2\" class=\"data row1 col2\" >0.8123</td>\n",
       "      <td id=\"T_4f03b_row1_col3\" class=\"data row1 col3\" >0.9963</td>\n",
       "      <td id=\"T_4f03b_row1_col4\" class=\"data row1 col4\" >0.8950</td>\n",
       "      <td id=\"T_4f03b_row1_col5\" class=\"data row1 col5\" >0.8637</td>\n",
       "      <td id=\"T_4f03b_row1_col6\" class=\"data row1 col6\" >0.8713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4f03b_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
       "      <td id=\"T_4f03b_row2_col0\" class=\"data row2 col0\" >0.9514</td>\n",
       "      <td id=\"T_4f03b_row2_col1\" class=\"data row2 col1\" >0.9951</td>\n",
       "      <td id=\"T_4f03b_row2_col2\" class=\"data row2 col2\" >0.8131</td>\n",
       "      <td id=\"T_4f03b_row2_col3\" class=\"data row2 col3\" >0.9960</td>\n",
       "      <td id=\"T_4f03b_row2_col4\" class=\"data row2 col4\" >0.8953</td>\n",
       "      <td id=\"T_4f03b_row2_col5\" class=\"data row2 col5\" >0.8641</td>\n",
       "      <td id=\"T_4f03b_row2_col6\" class=\"data row2 col6\" >0.8716</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4f03b_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
       "      <td id=\"T_4f03b_row3_col0\" class=\"data row3 col0\" >0.9542</td>\n",
       "      <td id=\"T_4f03b_row3_col1\" class=\"data row3 col1\" >0.9950</td>\n",
       "      <td id=\"T_4f03b_row3_col2\" class=\"data row3 col2\" >0.8249</td>\n",
       "      <td id=\"T_4f03b_row3_col3\" class=\"data row3 col3\" >0.9947</td>\n",
       "      <td id=\"T_4f03b_row3_col4\" class=\"data row3 col4\" >0.9019</td>\n",
       "      <td id=\"T_4f03b_row3_col5\" class=\"data row3 col5\" >0.8723</td>\n",
       "      <td id=\"T_4f03b_row3_col6\" class=\"data row3 col6\" >0.8788</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4f03b_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
       "      <td id=\"T_4f03b_row4_col0\" class=\"data row4 col0\" >0.9515</td>\n",
       "      <td id=\"T_4f03b_row4_col1\" class=\"data row4 col1\" >0.9941</td>\n",
       "      <td id=\"T_4f03b_row4_col2\" class=\"data row4 col2\" >0.8130</td>\n",
       "      <td id=\"T_4f03b_row4_col3\" class=\"data row4 col3\" >0.9965</td>\n",
       "      <td id=\"T_4f03b_row4_col4\" class=\"data row4 col4\" >0.8954</td>\n",
       "      <td id=\"T_4f03b_row4_col5\" class=\"data row4 col5\" >0.8643</td>\n",
       "      <td id=\"T_4f03b_row4_col6\" class=\"data row4 col6\" >0.8719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4f03b_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
       "      <td id=\"T_4f03b_row5_col0\" class=\"data row5 col0\" >0.9524</td>\n",
       "      <td id=\"T_4f03b_row5_col1\" class=\"data row5 col1\" >0.9946</td>\n",
       "      <td id=\"T_4f03b_row5_col2\" class=\"data row5 col2\" >0.8168</td>\n",
       "      <td id=\"T_4f03b_row5_col3\" class=\"data row5 col3\" >0.9962</td>\n",
       "      <td id=\"T_4f03b_row5_col4\" class=\"data row5 col4\" >0.8976</td>\n",
       "      <td id=\"T_4f03b_row5_col5\" class=\"data row5 col5\" >0.8670</td>\n",
       "      <td id=\"T_4f03b_row5_col6\" class=\"data row5 col6\" >0.8742</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4f03b_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
       "      <td id=\"T_4f03b_row6_col0\" class=\"data row6 col0\" >0.9487</td>\n",
       "      <td id=\"T_4f03b_row6_col1\" class=\"data row6 col1\" >0.9940</td>\n",
       "      <td id=\"T_4f03b_row6_col2\" class=\"data row6 col2\" >0.8026</td>\n",
       "      <td id=\"T_4f03b_row6_col3\" class=\"data row6 col3\" >0.9955</td>\n",
       "      <td id=\"T_4f03b_row6_col4\" class=\"data row6 col4\" >0.8887</td>\n",
       "      <td id=\"T_4f03b_row6_col5\" class=\"data row6 col5\" >0.8558</td>\n",
       "      <td id=\"T_4f03b_row6_col6\" class=\"data row6 col6\" >0.8642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4f03b_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
       "      <td id=\"T_4f03b_row7_col0\" class=\"data row7 col0\" >0.9532</td>\n",
       "      <td id=\"T_4f03b_row7_col1\" class=\"data row7 col1\" >0.9955</td>\n",
       "      <td id=\"T_4f03b_row7_col2\" class=\"data row7 col2\" >0.8199</td>\n",
       "      <td id=\"T_4f03b_row7_col3\" class=\"data row7 col3\" >0.9962</td>\n",
       "      <td id=\"T_4f03b_row7_col4\" class=\"data row7 col4\" >0.8995</td>\n",
       "      <td id=\"T_4f03b_row7_col5\" class=\"data row7 col5\" >0.8694</td>\n",
       "      <td id=\"T_4f03b_row7_col6\" class=\"data row7 col6\" >0.8764</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4f03b_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
       "      <td id=\"T_4f03b_row8_col0\" class=\"data row8 col0\" >0.9517</td>\n",
       "      <td id=\"T_4f03b_row8_col1\" class=\"data row8 col1\" >0.9943</td>\n",
       "      <td id=\"T_4f03b_row8_col2\" class=\"data row8 col2\" >0.8141</td>\n",
       "      <td id=\"T_4f03b_row8_col3\" class=\"data row8 col3\" >0.9963</td>\n",
       "      <td id=\"T_4f03b_row8_col4\" class=\"data row8 col4\" >0.8960</td>\n",
       "      <td id=\"T_4f03b_row8_col5\" class=\"data row8 col5\" >0.8650</td>\n",
       "      <td id=\"T_4f03b_row8_col6\" class=\"data row8 col6\" >0.8725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4f03b_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
       "      <td id=\"T_4f03b_row9_col0\" class=\"data row9 col0\" >0.9472</td>\n",
       "      <td id=\"T_4f03b_row9_col1\" class=\"data row9 col1\" >0.9937</td>\n",
       "      <td id=\"T_4f03b_row9_col2\" class=\"data row9 col2\" >0.7991</td>\n",
       "      <td id=\"T_4f03b_row9_col3\" class=\"data row9 col3\" >0.9926</td>\n",
       "      <td id=\"T_4f03b_row9_col4\" class=\"data row9 col4\" >0.8854</td>\n",
       "      <td id=\"T_4f03b_row9_col5\" class=\"data row9 col5\" >0.8516</td>\n",
       "      <td id=\"T_4f03b_row9_col6\" class=\"data row9 col6\" >0.8600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4f03b_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n",
       "      <td id=\"T_4f03b_row10_col0\" class=\"data row10 col0\" >0.9519</td>\n",
       "      <td id=\"T_4f03b_row10_col1\" class=\"data row10 col1\" >0.9946</td>\n",
       "      <td id=\"T_4f03b_row10_col2\" class=\"data row10 col2\" >0.8156</td>\n",
       "      <td id=\"T_4f03b_row10_col3\" class=\"data row10 col3\" >0.9952</td>\n",
       "      <td id=\"T_4f03b_row10_col4\" class=\"data row10 col4\" >0.8965</td>\n",
       "      <td id=\"T_4f03b_row10_col5\" class=\"data row10 col5\" >0.8656</td>\n",
       "      <td id=\"T_4f03b_row10_col6\" class=\"data row10 col6\" >0.8729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4f03b_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n",
       "      <td id=\"T_4f03b_row11_col0\" class=\"data row11 col0\" >0.9507</td>\n",
       "      <td id=\"T_4f03b_row11_col1\" class=\"data row11 col1\" >0.9958</td>\n",
       "      <td id=\"T_4f03b_row11_col2\" class=\"data row11 col2\" >0.8101</td>\n",
       "      <td id=\"T_4f03b_row11_col3\" class=\"data row11 col3\" >0.9959</td>\n",
       "      <td id=\"T_4f03b_row11_col4\" class=\"data row11 col4\" >0.8935</td>\n",
       "      <td id=\"T_4f03b_row11_col5\" class=\"data row11 col5\" >0.8618</td>\n",
       "      <td id=\"T_4f03b_row11_col6\" class=\"data row11 col6\" >0.8696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4f03b_level0_row12\" class=\"row_heading level0 row12\" >Mean</th>\n",
       "      <td id=\"T_4f03b_row12_col0\" class=\"data row12 col0\" >0.9516</td>\n",
       "      <td id=\"T_4f03b_row12_col1\" class=\"data row12 col1\" >0.9946</td>\n",
       "      <td id=\"T_4f03b_row12_col2\" class=\"data row12 col2\" >0.8141</td>\n",
       "      <td id=\"T_4f03b_row12_col3\" class=\"data row12 col3\" >0.9956</td>\n",
       "      <td id=\"T_4f03b_row12_col4\" class=\"data row12 col4\" >0.8957</td>\n",
       "      <td id=\"T_4f03b_row12_col5\" class=\"data row12 col5\" >0.8646</td>\n",
       "      <td id=\"T_4f03b_row12_col6\" class=\"data row12 col6\" >0.8720</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4f03b_level0_row13\" class=\"row_heading level0 row13\" >Std</th>\n",
       "      <td id=\"T_4f03b_row13_col0\" class=\"data row13 col0\" >0.0021</td>\n",
       "      <td id=\"T_4f03b_row13_col1\" class=\"data row13 col1\" >0.0006</td>\n",
       "      <td id=\"T_4f03b_row13_col2\" class=\"data row13 col2\" >0.0077</td>\n",
       "      <td id=\"T_4f03b_row13_col3\" class=\"data row13 col3\" >0.0010</td>\n",
       "      <td id=\"T_4f03b_row13_col4\" class=\"data row13 col4\" >0.0048</td>\n",
       "      <td id=\"T_4f03b_row13_col5\" class=\"data row13 col5\" >0.0061</td>\n",
       "      <td id=\"T_4f03b_row13_col6\" class=\"data row13 col6\" >0.0055</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x115444b8fd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 12 folds for each of 10 candidates, totalling 120 fits\n",
      "Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).\n"
     ]
    },
    {
     "data": {
      "text/html": [],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_8be4e_row12_col0, #T_8be4e_row12_col1, #T_8be4e_row12_col2, #T_8be4e_row12_col3, #T_8be4e_row12_col4, #T_8be4e_row12_col5, #T_8be4e_row12_col6 {\n",
       "  background: yellow;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_8be4e\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_8be4e_level0_col0\" class=\"col_heading level0 col0\" >Accuracy</th>\n",
       "      <th id=\"T_8be4e_level0_col1\" class=\"col_heading level0 col1\" >AUC</th>\n",
       "      <th id=\"T_8be4e_level0_col2\" class=\"col_heading level0 col2\" >Recall</th>\n",
       "      <th id=\"T_8be4e_level0_col3\" class=\"col_heading level0 col3\" >Prec.</th>\n",
       "      <th id=\"T_8be4e_level0_col4\" class=\"col_heading level0 col4\" >F1</th>\n",
       "      <th id=\"T_8be4e_level0_col5\" class=\"col_heading level0 col5\" >Kappa</th>\n",
       "      <th id=\"T_8be4e_level0_col6\" class=\"col_heading level0 col6\" >MCC</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th class=\"index_name level0\" >Fold</th>\n",
       "      <th class=\"blank col0\" >&nbsp;</th>\n",
       "      <th class=\"blank col1\" >&nbsp;</th>\n",
       "      <th class=\"blank col2\" >&nbsp;</th>\n",
       "      <th class=\"blank col3\" >&nbsp;</th>\n",
       "      <th class=\"blank col4\" >&nbsp;</th>\n",
       "      <th class=\"blank col5\" >&nbsp;</th>\n",
       "      <th class=\"blank col6\" >&nbsp;</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_8be4e_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
       "      <td id=\"T_8be4e_row0_col0\" class=\"data row0 col0\" >0.9904</td>\n",
       "      <td id=\"T_8be4e_row0_col1\" class=\"data row0 col1\" >0.9956</td>\n",
       "      <td id=\"T_8be4e_row0_col2\" class=\"data row0 col2\" >0.9767</td>\n",
       "      <td id=\"T_8be4e_row0_col3\" class=\"data row0 col3\" >0.9857</td>\n",
       "      <td id=\"T_8be4e_row0_col4\" class=\"data row0 col4\" >0.9812</td>\n",
       "      <td id=\"T_8be4e_row0_col5\" class=\"data row0 col5\" >0.9748</td>\n",
       "      <td id=\"T_8be4e_row0_col6\" class=\"data row0 col6\" >0.9748</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_8be4e_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
       "      <td id=\"T_8be4e_row1_col0\" class=\"data row1 col0\" >0.9913</td>\n",
       "      <td id=\"T_8be4e_row1_col1\" class=\"data row1 col1\" >0.9959</td>\n",
       "      <td id=\"T_8be4e_row1_col2\" class=\"data row1 col2\" >0.9789</td>\n",
       "      <td id=\"T_8be4e_row1_col3\" class=\"data row1 col3\" >0.9870</td>\n",
       "      <td id=\"T_8be4e_row1_col4\" class=\"data row1 col4\" >0.9830</td>\n",
       "      <td id=\"T_8be4e_row1_col5\" class=\"data row1 col5\" >0.9771</td>\n",
       "      <td id=\"T_8be4e_row1_col6\" class=\"data row1 col6\" >0.9772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_8be4e_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
       "      <td id=\"T_8be4e_row2_col0\" class=\"data row2 col0\" >0.9911</td>\n",
       "      <td id=\"T_8be4e_row2_col1\" class=\"data row2 col1\" >0.9975</td>\n",
       "      <td id=\"T_8be4e_row2_col2\" class=\"data row2 col2\" >0.9819</td>\n",
       "      <td id=\"T_8be4e_row2_col3\" class=\"data row2 col3\" >0.9833</td>\n",
       "      <td id=\"T_8be4e_row2_col4\" class=\"data row2 col4\" >0.9826</td>\n",
       "      <td id=\"T_8be4e_row2_col5\" class=\"data row2 col5\" >0.9767</td>\n",
       "      <td id=\"T_8be4e_row2_col6\" class=\"data row2 col6\" >0.9767</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_8be4e_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
       "      <td id=\"T_8be4e_row3_col0\" class=\"data row3 col0\" >0.9917</td>\n",
       "      <td id=\"T_8be4e_row3_col1\" class=\"data row3 col1\" >0.9969</td>\n",
       "      <td id=\"T_8be4e_row3_col2\" class=\"data row3 col2\" >0.9822</td>\n",
       "      <td id=\"T_8be4e_row3_col3\" class=\"data row3 col3\" >0.9853</td>\n",
       "      <td id=\"T_8be4e_row3_col4\" class=\"data row3 col4\" >0.9838</td>\n",
       "      <td id=\"T_8be4e_row3_col5\" class=\"data row3 col5\" >0.9782</td>\n",
       "      <td id=\"T_8be4e_row3_col6\" class=\"data row3 col6\" >0.9782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_8be4e_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
       "      <td id=\"T_8be4e_row4_col0\" class=\"data row4 col0\" >0.9912</td>\n",
       "      <td id=\"T_8be4e_row4_col1\" class=\"data row4 col1\" >0.9965</td>\n",
       "      <td id=\"T_8be4e_row4_col2\" class=\"data row4 col2\" >0.9821</td>\n",
       "      <td id=\"T_8be4e_row4_col3\" class=\"data row4 col3\" >0.9836</td>\n",
       "      <td id=\"T_8be4e_row4_col4\" class=\"data row4 col4\" >0.9829</td>\n",
       "      <td id=\"T_8be4e_row4_col5\" class=\"data row4 col5\" >0.9770</td>\n",
       "      <td id=\"T_8be4e_row4_col6\" class=\"data row4 col6\" >0.9770</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_8be4e_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
       "      <td id=\"T_8be4e_row5_col0\" class=\"data row5 col0\" >0.9910</td>\n",
       "      <td id=\"T_8be4e_row5_col1\" class=\"data row5 col1\" >0.9966</td>\n",
       "      <td id=\"T_8be4e_row5_col2\" class=\"data row5 col2\" >0.9778</td>\n",
       "      <td id=\"T_8be4e_row5_col3\" class=\"data row5 col3\" >0.9870</td>\n",
       "      <td id=\"T_8be4e_row5_col4\" class=\"data row5 col4\" >0.9824</td>\n",
       "      <td id=\"T_8be4e_row5_col5\" class=\"data row5 col5\" >0.9764</td>\n",
       "      <td id=\"T_8be4e_row5_col6\" class=\"data row5 col6\" >0.9764</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_8be4e_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
       "      <td id=\"T_8be4e_row6_col0\" class=\"data row6 col0\" >0.9910</td>\n",
       "      <td id=\"T_8be4e_row6_col1\" class=\"data row6 col1\" >0.9963</td>\n",
       "      <td id=\"T_8be4e_row6_col2\" class=\"data row6 col2\" >0.9804</td>\n",
       "      <td id=\"T_8be4e_row6_col3\" class=\"data row6 col3\" >0.9842</td>\n",
       "      <td id=\"T_8be4e_row6_col4\" class=\"data row6 col4\" >0.9823</td>\n",
       "      <td id=\"T_8be4e_row6_col5\" class=\"data row6 col5\" >0.9762</td>\n",
       "      <td id=\"T_8be4e_row6_col6\" class=\"data row6 col6\" >0.9762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_8be4e_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
       "      <td id=\"T_8be4e_row7_col0\" class=\"data row7 col0\" >0.9909</td>\n",
       "      <td id=\"T_8be4e_row7_col1\" class=\"data row7 col1\" >0.9972</td>\n",
       "      <td id=\"T_8be4e_row7_col2\" class=\"data row7 col2\" >0.9822</td>\n",
       "      <td id=\"T_8be4e_row7_col3\" class=\"data row7 col3\" >0.9822</td>\n",
       "      <td id=\"T_8be4e_row7_col4\" class=\"data row7 col4\" >0.9822</td>\n",
       "      <td id=\"T_8be4e_row7_col5\" class=\"data row7 col5\" >0.9761</td>\n",
       "      <td id=\"T_8be4e_row7_col6\" class=\"data row7 col6\" >0.9761</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_8be4e_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
       "      <td id=\"T_8be4e_row8_col0\" class=\"data row8 col0\" >0.9913</td>\n",
       "      <td id=\"T_8be4e_row8_col1\" class=\"data row8 col1\" >0.9974</td>\n",
       "      <td id=\"T_8be4e_row8_col2\" class=\"data row8 col2\" >0.9769</td>\n",
       "      <td id=\"T_8be4e_row8_col3\" class=\"data row8 col3\" >0.9890</td>\n",
       "      <td id=\"T_8be4e_row8_col4\" class=\"data row8 col4\" >0.9829</td>\n",
       "      <td id=\"T_8be4e_row8_col5\" class=\"data row8 col5\" >0.9771</td>\n",
       "      <td id=\"T_8be4e_row8_col6\" class=\"data row8 col6\" >0.9771</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_8be4e_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
       "      <td id=\"T_8be4e_row9_col0\" class=\"data row9 col0\" >0.9912</td>\n",
       "      <td id=\"T_8be4e_row9_col1\" class=\"data row9 col1\" >0.9963</td>\n",
       "      <td id=\"T_8be4e_row9_col2\" class=\"data row9 col2\" >0.9789</td>\n",
       "      <td id=\"T_8be4e_row9_col3\" class=\"data row9 col3\" >0.9864</td>\n",
       "      <td id=\"T_8be4e_row9_col4\" class=\"data row9 col4\" >0.9826</td>\n",
       "      <td id=\"T_8be4e_row9_col5\" class=\"data row9 col5\" >0.9767</td>\n",
       "      <td id=\"T_8be4e_row9_col6\" class=\"data row9 col6\" >0.9767</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_8be4e_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n",
       "      <td id=\"T_8be4e_row10_col0\" class=\"data row10 col0\" >0.9911</td>\n",
       "      <td id=\"T_8be4e_row10_col1\" class=\"data row10 col1\" >0.9967</td>\n",
       "      <td id=\"T_8be4e_row10_col2\" class=\"data row10 col2\" >0.9799</td>\n",
       "      <td id=\"T_8be4e_row10_col3\" class=\"data row10 col3\" >0.9853</td>\n",
       "      <td id=\"T_8be4e_row10_col4\" class=\"data row10 col4\" >0.9826</td>\n",
       "      <td id=\"T_8be4e_row10_col5\" class=\"data row10 col5\" >0.9766</td>\n",
       "      <td id=\"T_8be4e_row10_col6\" class=\"data row10 col6\" >0.9766</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_8be4e_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n",
       "      <td id=\"T_8be4e_row11_col0\" class=\"data row11 col0\" >0.9923</td>\n",
       "      <td id=\"T_8be4e_row11_col1\" class=\"data row11 col1\" >0.9970</td>\n",
       "      <td id=\"T_8be4e_row11_col2\" class=\"data row11 col2\" >0.9843</td>\n",
       "      <td id=\"T_8be4e_row11_col3\" class=\"data row11 col3\" >0.9857</td>\n",
       "      <td id=\"T_8be4e_row11_col4\" class=\"data row11 col4\" >0.9850</td>\n",
       "      <td id=\"T_8be4e_row11_col5\" class=\"data row11 col5\" >0.9798</td>\n",
       "      <td id=\"T_8be4e_row11_col6\" class=\"data row11 col6\" >0.9798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_8be4e_level0_row12\" class=\"row_heading level0 row12\" >Mean</th>\n",
       "      <td id=\"T_8be4e_row12_col0\" class=\"data row12 col0\" >0.9912</td>\n",
       "      <td id=\"T_8be4e_row12_col1\" class=\"data row12 col1\" >0.9967</td>\n",
       "      <td id=\"T_8be4e_row12_col2\" class=\"data row12 col2\" >0.9802</td>\n",
       "      <td id=\"T_8be4e_row12_col3\" class=\"data row12 col3\" >0.9854</td>\n",
       "      <td id=\"T_8be4e_row12_col4\" class=\"data row12 col4\" >0.9828</td>\n",
       "      <td id=\"T_8be4e_row12_col5\" class=\"data row12 col5\" >0.9769</td>\n",
       "      <td id=\"T_8be4e_row12_col6\" class=\"data row12 col6\" >0.9769</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_8be4e_level0_row13\" class=\"row_heading level0 row13\" >Std</th>\n",
       "      <td id=\"T_8be4e_row13_col0\" class=\"data row13 col0\" >0.0004</td>\n",
       "      <td id=\"T_8be4e_row13_col1\" class=\"data row13 col1\" >0.0006</td>\n",
       "      <td id=\"T_8be4e_row13_col2\" class=\"data row13 col2\" >0.0023</td>\n",
       "      <td id=\"T_8be4e_row13_col3\" class=\"data row13 col3\" >0.0018</td>\n",
       "      <td id=\"T_8be4e_row13_col4\" class=\"data row13 col4\" >0.0009</td>\n",
       "      <td id=\"T_8be4e_row13_col5\" class=\"data row13 col5\" >0.0012</td>\n",
       "      <td id=\"T_8be4e_row13_col6\" class=\"data row13 col6\" >0.0012</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x11539a30c90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 12 folds for each of 10 candidates, totalling 120 fits\n",
      "Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).\n"
     ]
    },
    {
     "data": {
      "text/html": [],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_912ac_row12_col0, #T_912ac_row12_col1, #T_912ac_row12_col2, #T_912ac_row12_col3, #T_912ac_row12_col4, #T_912ac_row12_col5, #T_912ac_row12_col6 {\n",
       "  background: yellow;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_912ac\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_912ac_level0_col0\" class=\"col_heading level0 col0\" >Accuracy</th>\n",
       "      <th id=\"T_912ac_level0_col1\" class=\"col_heading level0 col1\" >AUC</th>\n",
       "      <th id=\"T_912ac_level0_col2\" class=\"col_heading level0 col2\" >Recall</th>\n",
       "      <th id=\"T_912ac_level0_col3\" class=\"col_heading level0 col3\" >Prec.</th>\n",
       "      <th id=\"T_912ac_level0_col4\" class=\"col_heading level0 col4\" >F1</th>\n",
       "      <th id=\"T_912ac_level0_col5\" class=\"col_heading level0 col5\" >Kappa</th>\n",
       "      <th id=\"T_912ac_level0_col6\" class=\"col_heading level0 col6\" >MCC</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th class=\"index_name level0\" >Fold</th>\n",
       "      <th class=\"blank col0\" >&nbsp;</th>\n",
       "      <th class=\"blank col1\" >&nbsp;</th>\n",
       "      <th class=\"blank col2\" >&nbsp;</th>\n",
       "      <th class=\"blank col3\" >&nbsp;</th>\n",
       "      <th class=\"blank col4\" >&nbsp;</th>\n",
       "      <th class=\"blank col5\" >&nbsp;</th>\n",
       "      <th class=\"blank col6\" >&nbsp;</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_912ac_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
       "      <td id=\"T_912ac_row0_col0\" class=\"data row0 col0\" >0.9950</td>\n",
       "      <td id=\"T_912ac_row0_col1\" class=\"data row0 col1\" >0.9994</td>\n",
       "      <td id=\"T_912ac_row0_col2\" class=\"data row0 col2\" >0.9890</td>\n",
       "      <td id=\"T_912ac_row0_col3\" class=\"data row0 col3\" >0.9913</td>\n",
       "      <td id=\"T_912ac_row0_col4\" class=\"data row0 col4\" >0.9902</td>\n",
       "      <td id=\"T_912ac_row0_col5\" class=\"data row0 col5\" >0.9868</td>\n",
       "      <td id=\"T_912ac_row0_col6\" class=\"data row0 col6\" >0.9868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_912ac_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
       "      <td id=\"T_912ac_row1_col0\" class=\"data row1 col0\" >0.9957</td>\n",
       "      <td id=\"T_912ac_row1_col1\" class=\"data row1 col1\" >0.9993</td>\n",
       "      <td id=\"T_912ac_row1_col2\" class=\"data row1 col2\" >0.9903</td>\n",
       "      <td id=\"T_912ac_row1_col3\" class=\"data row1 col3\" >0.9929</td>\n",
       "      <td id=\"T_912ac_row1_col4\" class=\"data row1 col4\" >0.9916</td>\n",
       "      <td id=\"T_912ac_row1_col5\" class=\"data row1 col5\" >0.9887</td>\n",
       "      <td id=\"T_912ac_row1_col6\" class=\"data row1 col6\" >0.9887</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_912ac_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
       "      <td id=\"T_912ac_row2_col0\" class=\"data row2 col0\" >0.9959</td>\n",
       "      <td id=\"T_912ac_row2_col1\" class=\"data row2 col1\" >0.9995</td>\n",
       "      <td id=\"T_912ac_row2_col2\" class=\"data row2 col2\" >0.9896</td>\n",
       "      <td id=\"T_912ac_row2_col3\" class=\"data row2 col3\" >0.9943</td>\n",
       "      <td id=\"T_912ac_row2_col4\" class=\"data row2 col4\" >0.9920</td>\n",
       "      <td id=\"T_912ac_row2_col5\" class=\"data row2 col5\" >0.9892</td>\n",
       "      <td id=\"T_912ac_row2_col6\" class=\"data row2 col6\" >0.9892</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_912ac_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
       "      <td id=\"T_912ac_row3_col0\" class=\"data row3 col0\" >0.9957</td>\n",
       "      <td id=\"T_912ac_row3_col1\" class=\"data row3 col1\" >0.9992</td>\n",
       "      <td id=\"T_912ac_row3_col2\" class=\"data row3 col2\" >0.9898</td>\n",
       "      <td id=\"T_912ac_row3_col3\" class=\"data row3 col3\" >0.9935</td>\n",
       "      <td id=\"T_912ac_row3_col4\" class=\"data row3 col4\" >0.9917</td>\n",
       "      <td id=\"T_912ac_row3_col5\" class=\"data row3 col5\" >0.9888</td>\n",
       "      <td id=\"T_912ac_row3_col6\" class=\"data row3 col6\" >0.9888</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_912ac_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
       "      <td id=\"T_912ac_row4_col0\" class=\"data row4 col0\" >0.9958</td>\n",
       "      <td id=\"T_912ac_row4_col1\" class=\"data row4 col1\" >0.9992</td>\n",
       "      <td id=\"T_912ac_row4_col2\" class=\"data row4 col2\" >0.9890</td>\n",
       "      <td id=\"T_912ac_row4_col3\" class=\"data row4 col3\" >0.9946</td>\n",
       "      <td id=\"T_912ac_row4_col4\" class=\"data row4 col4\" >0.9918</td>\n",
       "      <td id=\"T_912ac_row4_col5\" class=\"data row4 col5\" >0.9890</td>\n",
       "      <td id=\"T_912ac_row4_col6\" class=\"data row4 col6\" >0.9890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_912ac_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
       "      <td id=\"T_912ac_row5_col0\" class=\"data row5 col0\" >0.9954</td>\n",
       "      <td id=\"T_912ac_row5_col1\" class=\"data row5 col1\" >0.9996</td>\n",
       "      <td id=\"T_912ac_row5_col2\" class=\"data row5 col2\" >0.9885</td>\n",
       "      <td id=\"T_912ac_row5_col3\" class=\"data row5 col3\" >0.9935</td>\n",
       "      <td id=\"T_912ac_row5_col4\" class=\"data row5 col4\" >0.9910</td>\n",
       "      <td id=\"T_912ac_row5_col5\" class=\"data row5 col5\" >0.9879</td>\n",
       "      <td id=\"T_912ac_row5_col6\" class=\"data row5 col6\" >0.9880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_912ac_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
       "      <td id=\"T_912ac_row6_col0\" class=\"data row6 col0\" >0.9961</td>\n",
       "      <td id=\"T_912ac_row6_col1\" class=\"data row6 col1\" >0.9996</td>\n",
       "      <td id=\"T_912ac_row6_col2\" class=\"data row6 col2\" >0.9918</td>\n",
       "      <td id=\"T_912ac_row6_col3\" class=\"data row6 col3\" >0.9931</td>\n",
       "      <td id=\"T_912ac_row6_col4\" class=\"data row6 col4\" >0.9925</td>\n",
       "      <td id=\"T_912ac_row6_col5\" class=\"data row6 col5\" >0.9899</td>\n",
       "      <td id=\"T_912ac_row6_col6\" class=\"data row6 col6\" >0.9899</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_912ac_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
       "      <td id=\"T_912ac_row7_col0\" class=\"data row7 col0\" >0.9958</td>\n",
       "      <td id=\"T_912ac_row7_col1\" class=\"data row7 col1\" >0.9995</td>\n",
       "      <td id=\"T_912ac_row7_col2\" class=\"data row7 col2\" >0.9896</td>\n",
       "      <td id=\"T_912ac_row7_col3\" class=\"data row7 col3\" >0.9940</td>\n",
       "      <td id=\"T_912ac_row7_col4\" class=\"data row7 col4\" >0.9918</td>\n",
       "      <td id=\"T_912ac_row7_col5\" class=\"data row7 col5\" >0.9890</td>\n",
       "      <td id=\"T_912ac_row7_col6\" class=\"data row7 col6\" >0.9890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_912ac_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
       "      <td id=\"T_912ac_row8_col0\" class=\"data row8 col0\" >0.9954</td>\n",
       "      <td id=\"T_912ac_row8_col1\" class=\"data row8 col1\" >0.9994</td>\n",
       "      <td id=\"T_912ac_row8_col2\" class=\"data row8 col2\" >0.9881</td>\n",
       "      <td id=\"T_912ac_row8_col3\" class=\"data row8 col3\" >0.9938</td>\n",
       "      <td id=\"T_912ac_row8_col4\" class=\"data row8 col4\" >0.9909</td>\n",
       "      <td id=\"T_912ac_row8_col5\" class=\"data row8 col5\" >0.9878</td>\n",
       "      <td id=\"T_912ac_row8_col6\" class=\"data row8 col6\" >0.9878</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_912ac_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
       "      <td id=\"T_912ac_row9_col0\" class=\"data row9 col0\" >0.9950</td>\n",
       "      <td id=\"T_912ac_row9_col1\" class=\"data row9 col1\" >0.9993</td>\n",
       "      <td id=\"T_912ac_row9_col2\" class=\"data row9 col2\" >0.9881</td>\n",
       "      <td id=\"T_912ac_row9_col3\" class=\"data row9 col3\" >0.9924</td>\n",
       "      <td id=\"T_912ac_row9_col4\" class=\"data row9 col4\" >0.9902</td>\n",
       "      <td id=\"T_912ac_row9_col5\" class=\"data row9 col5\" >0.9869</td>\n",
       "      <td id=\"T_912ac_row9_col6\" class=\"data row9 col6\" >0.9869</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_912ac_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n",
       "      <td id=\"T_912ac_row10_col0\" class=\"data row10 col0\" >0.9949</td>\n",
       "      <td id=\"T_912ac_row10_col1\" class=\"data row10 col1\" >0.9992</td>\n",
       "      <td id=\"T_912ac_row10_col2\" class=\"data row10 col2\" >0.9873</td>\n",
       "      <td id=\"T_912ac_row10_col3\" class=\"data row10 col3\" >0.9929</td>\n",
       "      <td id=\"T_912ac_row10_col4\" class=\"data row10 col4\" >0.9901</td>\n",
       "      <td id=\"T_912ac_row10_col5\" class=\"data row10 col5\" >0.9867</td>\n",
       "      <td id=\"T_912ac_row10_col6\" class=\"data row10 col6\" >0.9867</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_912ac_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n",
       "      <td id=\"T_912ac_row11_col0\" class=\"data row11 col0\" >0.9958</td>\n",
       "      <td id=\"T_912ac_row11_col1\" class=\"data row11 col1\" >0.9993</td>\n",
       "      <td id=\"T_912ac_row11_col2\" class=\"data row11 col2\" >0.9904</td>\n",
       "      <td id=\"T_912ac_row11_col3\" class=\"data row11 col3\" >0.9932</td>\n",
       "      <td id=\"T_912ac_row11_col4\" class=\"data row11 col4\" >0.9918</td>\n",
       "      <td id=\"T_912ac_row11_col5\" class=\"data row11 col5\" >0.9890</td>\n",
       "      <td id=\"T_912ac_row11_col6\" class=\"data row11 col6\" >0.9890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_912ac_level0_row12\" class=\"row_heading level0 row12\" >Mean</th>\n",
       "      <td id=\"T_912ac_row12_col0\" class=\"data row12 col0\" >0.9956</td>\n",
       "      <td id=\"T_912ac_row12_col1\" class=\"data row12 col1\" >0.9994</td>\n",
       "      <td id=\"T_912ac_row12_col2\" class=\"data row12 col2\" >0.9893</td>\n",
       "      <td id=\"T_912ac_row12_col3\" class=\"data row12 col3\" >0.9933</td>\n",
       "      <td id=\"T_912ac_row12_col4\" class=\"data row12 col4\" >0.9913</td>\n",
       "      <td id=\"T_912ac_row12_col5\" class=\"data row12 col5\" >0.9883</td>\n",
       "      <td id=\"T_912ac_row12_col6\" class=\"data row12 col6\" >0.9883</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_912ac_level0_row13\" class=\"row_heading level0 row13\" >Std</th>\n",
       "      <td id=\"T_912ac_row13_col0\" class=\"data row13 col0\" >0.0004</td>\n",
       "      <td id=\"T_912ac_row13_col1\" class=\"data row13 col1\" >0.0001</td>\n",
       "      <td id=\"T_912ac_row13_col2\" class=\"data row13 col2\" >0.0012</td>\n",
       "      <td id=\"T_912ac_row13_col3\" class=\"data row13 col3\" >0.0009</td>\n",
       "      <td id=\"T_912ac_row13_col4\" class=\"data row13 col4\" >0.0008</td>\n",
       "      <td id=\"T_912ac_row13_col5\" class=\"data row13 col5\" >0.0010</td>\n",
       "      <td id=\"T_912ac_row13_col6\" class=\"data row13 col6\" >0.0010</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x11539a23690>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 12 folds for each of 10 candidates, totalling 120 fits\n"
     ]
    },
    {
     "data": {
      "text/html": [],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_dbf00_row12_col0, #T_dbf00_row12_col1, #T_dbf00_row12_col2, #T_dbf00_row12_col3, #T_dbf00_row12_col4, #T_dbf00_row12_col5, #T_dbf00_row12_col6 {\n",
       "  background: yellow;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_dbf00\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_dbf00_level0_col0\" class=\"col_heading level0 col0\" >Accuracy</th>\n",
       "      <th id=\"T_dbf00_level0_col1\" class=\"col_heading level0 col1\" >AUC</th>\n",
       "      <th id=\"T_dbf00_level0_col2\" class=\"col_heading level0 col2\" >Recall</th>\n",
       "      <th id=\"T_dbf00_level0_col3\" class=\"col_heading level0 col3\" >Prec.</th>\n",
       "      <th id=\"T_dbf00_level0_col4\" class=\"col_heading level0 col4\" >F1</th>\n",
       "      <th id=\"T_dbf00_level0_col5\" class=\"col_heading level0 col5\" >Kappa</th>\n",
       "      <th id=\"T_dbf00_level0_col6\" class=\"col_heading level0 col6\" >MCC</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th class=\"index_name level0\" >Fold</th>\n",
       "      <th class=\"blank col0\" >&nbsp;</th>\n",
       "      <th class=\"blank col1\" >&nbsp;</th>\n",
       "      <th class=\"blank col2\" >&nbsp;</th>\n",
       "      <th class=\"blank col3\" >&nbsp;</th>\n",
       "      <th class=\"blank col4\" >&nbsp;</th>\n",
       "      <th class=\"blank col5\" >&nbsp;</th>\n",
       "      <th class=\"blank col6\" >&nbsp;</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_dbf00_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
       "      <td id=\"T_dbf00_row0_col0\" class=\"data row0 col0\" >0.9950</td>\n",
       "      <td id=\"T_dbf00_row0_col1\" class=\"data row0 col1\" >0.9999</td>\n",
       "      <td id=\"T_dbf00_row0_col2\" class=\"data row0 col2\" >0.9904</td>\n",
       "      <td id=\"T_dbf00_row0_col3\" class=\"data row0 col3\" >0.9899</td>\n",
       "      <td id=\"T_dbf00_row0_col4\" class=\"data row0 col4\" >0.9902</td>\n",
       "      <td id=\"T_dbf00_row0_col5\" class=\"data row0 col5\" >0.9868</td>\n",
       "      <td id=\"T_dbf00_row0_col6\" class=\"data row0 col6\" >0.9868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dbf00_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
       "      <td id=\"T_dbf00_row1_col0\" class=\"data row1 col0\" >0.9953</td>\n",
       "      <td id=\"T_dbf00_row1_col1\" class=\"data row1 col1\" >0.9998</td>\n",
       "      <td id=\"T_dbf00_row1_col2\" class=\"data row1 col2\" >0.9909</td>\n",
       "      <td id=\"T_dbf00_row1_col3\" class=\"data row1 col3\" >0.9907</td>\n",
       "      <td id=\"T_dbf00_row1_col4\" class=\"data row1 col4\" >0.9908</td>\n",
       "      <td id=\"T_dbf00_row1_col5\" class=\"data row1 col5\" >0.9877</td>\n",
       "      <td id=\"T_dbf00_row1_col6\" class=\"data row1 col6\" >0.9877</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dbf00_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
       "      <td id=\"T_dbf00_row2_col0\" class=\"data row2 col0\" >0.9953</td>\n",
       "      <td id=\"T_dbf00_row2_col1\" class=\"data row2 col1\" >0.9999</td>\n",
       "      <td id=\"T_dbf00_row2_col2\" class=\"data row2 col2\" >0.9898</td>\n",
       "      <td id=\"T_dbf00_row2_col3\" class=\"data row2 col3\" >0.9917</td>\n",
       "      <td id=\"T_dbf00_row2_col4\" class=\"data row2 col4\" >0.9907</td>\n",
       "      <td id=\"T_dbf00_row2_col5\" class=\"data row2 col5\" >0.9875</td>\n",
       "      <td id=\"T_dbf00_row2_col6\" class=\"data row2 col6\" >0.9875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dbf00_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
       "      <td id=\"T_dbf00_row3_col0\" class=\"data row3 col0\" >0.9944</td>\n",
       "      <td id=\"T_dbf00_row3_col1\" class=\"data row3 col1\" >0.9999</td>\n",
       "      <td id=\"T_dbf00_row3_col2\" class=\"data row3 col2\" >0.9895</td>\n",
       "      <td id=\"T_dbf00_row3_col3\" class=\"data row3 col3\" >0.9887</td>\n",
       "      <td id=\"T_dbf00_row3_col4\" class=\"data row3 col4\" >0.9891</td>\n",
       "      <td id=\"T_dbf00_row3_col5\" class=\"data row3 col5\" >0.9853</td>\n",
       "      <td id=\"T_dbf00_row3_col6\" class=\"data row3 col6\" >0.9853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dbf00_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
       "      <td id=\"T_dbf00_row4_col0\" class=\"data row4 col0\" >0.9961</td>\n",
       "      <td id=\"T_dbf00_row4_col1\" class=\"data row4 col1\" >0.9999</td>\n",
       "      <td id=\"T_dbf00_row4_col2\" class=\"data row4 col2\" >0.9925</td>\n",
       "      <td id=\"T_dbf00_row4_col3\" class=\"data row4 col3\" >0.9921</td>\n",
       "      <td id=\"T_dbf00_row4_col4\" class=\"data row4 col4\" >0.9923</td>\n",
       "      <td id=\"T_dbf00_row4_col5\" class=\"data row4 col5\" >0.9897</td>\n",
       "      <td id=\"T_dbf00_row4_col6\" class=\"data row4 col6\" >0.9897</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dbf00_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
       "      <td id=\"T_dbf00_row5_col0\" class=\"data row5 col0\" >0.9951</td>\n",
       "      <td id=\"T_dbf00_row5_col1\" class=\"data row5 col1\" >0.9998</td>\n",
       "      <td id=\"T_dbf00_row5_col2\" class=\"data row5 col2\" >0.9898</td>\n",
       "      <td id=\"T_dbf00_row5_col3\" class=\"data row5 col3\" >0.9910</td>\n",
       "      <td id=\"T_dbf00_row5_col4\" class=\"data row5 col4\" >0.9904</td>\n",
       "      <td id=\"T_dbf00_row5_col5\" class=\"data row5 col5\" >0.9871</td>\n",
       "      <td id=\"T_dbf00_row5_col6\" class=\"data row5 col6\" >0.9871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dbf00_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
       "      <td id=\"T_dbf00_row6_col0\" class=\"data row6 col0\" >0.9953</td>\n",
       "      <td id=\"T_dbf00_row6_col1\" class=\"data row6 col1\" >0.9999</td>\n",
       "      <td id=\"T_dbf00_row6_col2\" class=\"data row6 col2\" >0.9926</td>\n",
       "      <td id=\"T_dbf00_row6_col3\" class=\"data row6 col3\" >0.9892</td>\n",
       "      <td id=\"T_dbf00_row6_col4\" class=\"data row6 col4\" >0.9909</td>\n",
       "      <td id=\"T_dbf00_row6_col5\" class=\"data row6 col5\" >0.9878</td>\n",
       "      <td id=\"T_dbf00_row6_col6\" class=\"data row6 col6\" >0.9878</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dbf00_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
       "      <td id=\"T_dbf00_row7_col0\" class=\"data row7 col0\" >0.9960</td>\n",
       "      <td id=\"T_dbf00_row7_col1\" class=\"data row7 col1\" >0.9999</td>\n",
       "      <td id=\"T_dbf00_row7_col2\" class=\"data row7 col2\" >0.9914</td>\n",
       "      <td id=\"T_dbf00_row7_col3\" class=\"data row7 col3\" >0.9929</td>\n",
       "      <td id=\"T_dbf00_row7_col4\" class=\"data row7 col4\" >0.9921</td>\n",
       "      <td id=\"T_dbf00_row7_col5\" class=\"data row7 col5\" >0.9894</td>\n",
       "      <td id=\"T_dbf00_row7_col6\" class=\"data row7 col6\" >0.9894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dbf00_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
       "      <td id=\"T_dbf00_row8_col0\" class=\"data row8 col0\" >0.9946</td>\n",
       "      <td id=\"T_dbf00_row8_col1\" class=\"data row8 col1\" >0.9996</td>\n",
       "      <td id=\"T_dbf00_row8_col2\" class=\"data row8 col2\" >0.9881</td>\n",
       "      <td id=\"T_dbf00_row8_col3\" class=\"data row8 col3\" >0.9907</td>\n",
       "      <td id=\"T_dbf00_row8_col4\" class=\"data row8 col4\" >0.9894</td>\n",
       "      <td id=\"T_dbf00_row8_col5\" class=\"data row8 col5\" >0.9857</td>\n",
       "      <td id=\"T_dbf00_row8_col6\" class=\"data row8 col6\" >0.9857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dbf00_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
       "      <td id=\"T_dbf00_row9_col0\" class=\"data row9 col0\" >0.9949</td>\n",
       "      <td id=\"T_dbf00_row9_col1\" class=\"data row9 col1\" >0.9999</td>\n",
       "      <td id=\"T_dbf00_row9_col2\" class=\"data row9 col2\" >0.9896</td>\n",
       "      <td id=\"T_dbf00_row9_col3\" class=\"data row9 col3\" >0.9906</td>\n",
       "      <td id=\"T_dbf00_row9_col4\" class=\"data row9 col4\" >0.9901</td>\n",
       "      <td id=\"T_dbf00_row9_col5\" class=\"data row9 col5\" >0.9867</td>\n",
       "      <td id=\"T_dbf00_row9_col6\" class=\"data row9 col6\" >0.9867</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dbf00_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n",
       "      <td id=\"T_dbf00_row10_col0\" class=\"data row10 col0\" >0.9952</td>\n",
       "      <td id=\"T_dbf00_row10_col1\" class=\"data row10 col1\" >0.9999</td>\n",
       "      <td id=\"T_dbf00_row10_col2\" class=\"data row10 col2\" >0.9904</td>\n",
       "      <td id=\"T_dbf00_row10_col3\" class=\"data row10 col3\" >0.9907</td>\n",
       "      <td id=\"T_dbf00_row10_col4\" class=\"data row10 col4\" >0.9906</td>\n",
       "      <td id=\"T_dbf00_row10_col5\" class=\"data row10 col5\" >0.9873</td>\n",
       "      <td id=\"T_dbf00_row10_col6\" class=\"data row10 col6\" >0.9873</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dbf00_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n",
       "      <td id=\"T_dbf00_row11_col0\" class=\"data row11 col0\" >0.9954</td>\n",
       "      <td id=\"T_dbf00_row11_col1\" class=\"data row11 col1\" >0.9999</td>\n",
       "      <td id=\"T_dbf00_row11_col2\" class=\"data row11 col2\" >0.9918</td>\n",
       "      <td id=\"T_dbf00_row11_col3\" class=\"data row11 col3\" >0.9901</td>\n",
       "      <td id=\"T_dbf00_row11_col4\" class=\"data row11 col4\" >0.9910</td>\n",
       "      <td id=\"T_dbf00_row11_col5\" class=\"data row11 col5\" >0.9879</td>\n",
       "      <td id=\"T_dbf00_row11_col6\" class=\"data row11 col6\" >0.9879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dbf00_level0_row12\" class=\"row_heading level0 row12\" >Mean</th>\n",
       "      <td id=\"T_dbf00_row12_col0\" class=\"data row12 col0\" >0.9952</td>\n",
       "      <td id=\"T_dbf00_row12_col1\" class=\"data row12 col1\" >0.9998</td>\n",
       "      <td id=\"T_dbf00_row12_col2\" class=\"data row12 col2\" >0.9906</td>\n",
       "      <td id=\"T_dbf00_row12_col3\" class=\"data row12 col3\" >0.9907</td>\n",
       "      <td id=\"T_dbf00_row12_col4\" class=\"data row12 col4\" >0.9906</td>\n",
       "      <td id=\"T_dbf00_row12_col5\" class=\"data row12 col5\" >0.9874</td>\n",
       "      <td id=\"T_dbf00_row12_col6\" class=\"data row12 col6\" >0.9874</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dbf00_level0_row13\" class=\"row_heading level0 row13\" >Std</th>\n",
       "      <td id=\"T_dbf00_row13_col0\" class=\"data row13 col0\" >0.0005</td>\n",
       "      <td id=\"T_dbf00_row13_col1\" class=\"data row13 col1\" >0.0001</td>\n",
       "      <td id=\"T_dbf00_row13_col2\" class=\"data row13 col2\" >0.0013</td>\n",
       "      <td id=\"T_dbf00_row13_col3\" class=\"data row13 col3\" >0.0011</td>\n",
       "      <td id=\"T_dbf00_row13_col4\" class=\"data row13 col4\" >0.0009</td>\n",
       "      <td id=\"T_dbf00_row13_col5\" class=\"data row13 col5\" >0.0012</td>\n",
       "      <td id=\"T_dbf00_row13_col6\" class=\"data row13 col6\" >0.0012</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x1153818b810>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 12 folds for each of 10 candidates, totalling 120 fits\n"
     ]
    }
   ],
   "source": [
    "# Example: tune top 5 models\n",
    "tuned_models = [tune_model(m) for m in top_models]\n",
    "\n",
    "# Finalize (retrain on entire dataset)\n",
    "final_models = [finalize_model(m) for m in tuned_models]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5ba41464",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n",
      "                       criterion='gini', max_depth=None, max_features='sqrt',\n",
      "                       max_leaf_nodes=None, max_samples=None,\n",
      "                       min_impurity_decrease=0.0, min_samples_leaf=1,\n",
      "                       min_samples_split=2, min_weight_fraction_leaf=0.0,\n",
      "                       monotonic_cst=None, n_estimators=100, n_jobs=-1,\n",
      "                       oob_score=False, random_state=42, verbose=0,\n",
      "                       warm_start=False)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_a256e\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_a256e_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
       "      <th id=\"T_a256e_level0_col1\" class=\"col_heading level0 col1\" >Accuracy</th>\n",
       "      <th id=\"T_a256e_level0_col2\" class=\"col_heading level0 col2\" >AUC</th>\n",
       "      <th id=\"T_a256e_level0_col3\" class=\"col_heading level0 col3\" >Recall</th>\n",
       "      <th id=\"T_a256e_level0_col4\" class=\"col_heading level0 col4\" >Prec.</th>\n",
       "      <th id=\"T_a256e_level0_col5\" class=\"col_heading level0 col5\" >F1</th>\n",
       "      <th id=\"T_a256e_level0_col6\" class=\"col_heading level0 col6\" >Kappa</th>\n",
       "      <th id=\"T_a256e_level0_col7\" class=\"col_heading level0 col7\" >MCC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_a256e_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
       "      <td id=\"T_a256e_row0_col0\" class=\"data row0 col0\" >Random Forest Classifier</td>\n",
       "      <td id=\"T_a256e_row0_col1\" class=\"data row0 col1\" >0.9978</td>\n",
       "      <td id=\"T_a256e_row0_col2\" class=\"data row0 col2\" >0.9998</td>\n",
       "      <td id=\"T_a256e_row0_col3\" class=\"data row0 col3\" >0.9951</td>\n",
       "      <td id=\"T_a256e_row0_col4\" class=\"data row0 col4\" >0.9963</td>\n",
       "      <td id=\"T_a256e_row0_col5\" class=\"data row0 col5\" >0.9957</td>\n",
       "      <td id=\"T_a256e_row0_col6\" class=\"data row0 col6\" >0.9943</td>\n",
       "      <td id=\"T_a256e_row0_col7\" class=\"data row0 col7\" >0.9943</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x1154b78fbd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                Open          High           Low         Close    Volume  \\\n",
      "203636  27248.400391  27261.000000  27246.699219  27247.199219  0.001548   \n",
      "124765  28192.099609  28204.400391  28192.099609  28204.199219  0.000772   \n",
      "104028  27856.699219  27882.199219  27828.000000  27832.599609  0.004641   \n",
      "400979  34277.398438  34295.199219  34277.398438  34295.199219  0.000109   \n",
      "362102  27251.800781  27262.699219  27240.800781  27246.900391  0.000684   \n",
      "\n",
      "              ema_7d       ema_20d       ema_30d        sma_7d       sma_20d  \\\n",
      "203636  27113.683594  27229.417969  27370.933594  27217.537109  26978.500000   \n",
      "124765  28020.646484  27105.750000  26367.845703  28112.335938  27510.529297   \n",
      "104028  26130.492188  24331.580078  23820.697266  26144.292969  23496.232422   \n",
      "400979  33612.746094  31326.005859  30324.343750  34195.015625  30375.283203   \n",
      "362102  27172.125000  26806.048828  26797.648438  27053.117188  26743.332031   \n",
      "\n",
      "        ...  macd_hist_12_26    rsi_14d    bb_mid_20d  bb_upper_20d  \\\n",
      "203636  ...        81.145332  49.971107  26978.500000  27776.058594   \n",
      "124765  ...      -106.783104  50.329514  27510.529297  29571.908203   \n",
      "104028  ...       730.804871  50.711735  23496.232422  28118.728516   \n",
      "400979  ...       480.353882  50.877605  30375.283203  36484.984375   \n",
      "362102  ...       176.446426  50.158592  26743.332031  27671.498047   \n",
      "\n",
      "        bb_lower_20d    atr_14d      fd_14d  future_trend  prediction_label  \\\n",
      "203636  26180.941406  13.369464  246.529007             0                 0   \n",
      "124765  25449.150391  22.557392  305.067993             0                 0   \n",
      "104028  18873.734375  26.277288    7.125000             0                 0   \n",
      "400979  24265.582031  17.241283    7.754000             0                 0   \n",
      "362102  25815.166016  11.289476  171.522003             0                 0   \n",
      "\n",
      "        prediction_score  \n",
      "203636               1.0  \n",
      "124765               1.0  \n",
      "104028               1.0  \n",
      "400979               1.0  \n",
      "362102               1.0  \n",
      "\n",
      "[5 rows x 23 columns]\n",
      "ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,\n",
      "                     criterion='gini', max_depth=None, max_features='sqrt',\n",
      "                     max_leaf_nodes=None, max_samples=None,\n",
      "                     min_impurity_decrease=0.0, min_samples_leaf=1,\n",
      "                     min_samples_split=2, min_weight_fraction_leaf=0.0,\n",
      "                     monotonic_cst=None, n_estimators=100, n_jobs=-1,\n",
      "                     oob_score=False, random_state=42, verbose=0,\n",
      "                     warm_start=False)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_92684\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_92684_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
       "      <th id=\"T_92684_level0_col1\" class=\"col_heading level0 col1\" >Accuracy</th>\n",
       "      <th id=\"T_92684_level0_col2\" class=\"col_heading level0 col2\" >AUC</th>\n",
       "      <th id=\"T_92684_level0_col3\" class=\"col_heading level0 col3\" >Recall</th>\n",
       "      <th id=\"T_92684_level0_col4\" class=\"col_heading level0 col4\" >Prec.</th>\n",
       "      <th id=\"T_92684_level0_col5\" class=\"col_heading level0 col5\" >F1</th>\n",
       "      <th id=\"T_92684_level0_col6\" class=\"col_heading level0 col6\" >Kappa</th>\n",
       "      <th id=\"T_92684_level0_col7\" class=\"col_heading level0 col7\" >MCC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_92684_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
       "      <td id=\"T_92684_row0_col0\" class=\"data row0 col0\" >Extra Trees Classifier</td>\n",
       "      <td id=\"T_92684_row0_col1\" class=\"data row0 col1\" >0.9977</td>\n",
       "      <td id=\"T_92684_row0_col2\" class=\"data row0 col2\" >0.9999</td>\n",
       "      <td id=\"T_92684_row0_col3\" class=\"data row0 col3\" >0.9950</td>\n",
       "      <td id=\"T_92684_row0_col4\" class=\"data row0 col4\" >0.9960</td>\n",
       "      <td id=\"T_92684_row0_col5\" class=\"data row0 col5\" >0.9955</td>\n",
       "      <td id=\"T_92684_row0_col6\" class=\"data row0 col6\" >0.9939</td>\n",
       "      <td id=\"T_92684_row0_col7\" class=\"data row0 col7\" >0.9939</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x1154b73e8d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                Open          High           Low         Close    Volume  \\\n",
      "203636  27248.400391  27261.000000  27246.699219  27247.199219  0.001548   \n",
      "124765  28192.099609  28204.400391  28192.099609  28204.199219  0.000772   \n",
      "104028  27856.699219  27882.199219  27828.000000  27832.599609  0.004641   \n",
      "400979  34277.398438  34295.199219  34277.398438  34295.199219  0.000109   \n",
      "362102  27251.800781  27262.699219  27240.800781  27246.900391  0.000684   \n",
      "\n",
      "              ema_7d       ema_20d       ema_30d        sma_7d       sma_20d  \\\n",
      "203636  27113.683594  27229.417969  27370.933594  27217.537109  26978.500000   \n",
      "124765  28020.646484  27105.750000  26367.845703  28112.335938  27510.529297   \n",
      "104028  26130.492188  24331.580078  23820.697266  26144.292969  23496.232422   \n",
      "400979  33612.746094  31326.005859  30324.343750  34195.015625  30375.283203   \n",
      "362102  27172.125000  26806.048828  26797.648438  27053.117188  26743.332031   \n",
      "\n",
      "        ...  macd_hist_12_26    rsi_14d    bb_mid_20d  bb_upper_20d  \\\n",
      "203636  ...        81.145332  49.971107  26978.500000  27776.058594   \n",
      "124765  ...      -106.783104  50.329514  27510.529297  29571.908203   \n",
      "104028  ...       730.804871  50.711735  23496.232422  28118.728516   \n",
      "400979  ...       480.353882  50.877605  30375.283203  36484.984375   \n",
      "362102  ...       176.446426  50.158592  26743.332031  27671.498047   \n",
      "\n",
      "        bb_lower_20d    atr_14d      fd_14d  future_trend  prediction_label  \\\n",
      "203636  26180.941406  13.369464  246.529007             0                 0   \n",
      "124765  25449.150391  22.557392  305.067993             0                 0   \n",
      "104028  18873.734375  26.277288    7.125000             0                 0   \n",
      "400979  24265.582031  17.241283    7.754000             0                 0   \n",
      "362102  25815.166016  11.289476  171.522003             0                 0   \n",
      "\n",
      "        prediction_score  \n",
      "203636               1.0  \n",
      "124765               1.0  \n",
      "104028               1.0  \n",
      "400979               1.0  \n",
      "362102               1.0  \n",
      "\n",
      "[5 rows x 23 columns]\n",
      "DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',\n",
      "                       max_depth=None, max_features=None, max_leaf_nodes=None,\n",
      "                       min_impurity_decrease=0.0, min_samples_leaf=1,\n",
      "                       min_samples_split=2, min_weight_fraction_leaf=0.0,\n",
      "                       monotonic_cst=None, random_state=42, splitter='best')\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_8a5c8\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_8a5c8_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
       "      <th id=\"T_8a5c8_level0_col1\" class=\"col_heading level0 col1\" >Accuracy</th>\n",
       "      <th id=\"T_8a5c8_level0_col2\" class=\"col_heading level0 col2\" >AUC</th>\n",
       "      <th id=\"T_8a5c8_level0_col3\" class=\"col_heading level0 col3\" >Recall</th>\n",
       "      <th id=\"T_8a5c8_level0_col4\" class=\"col_heading level0 col4\" >Prec.</th>\n",
       "      <th id=\"T_8a5c8_level0_col5\" class=\"col_heading level0 col5\" >F1</th>\n",
       "      <th id=\"T_8a5c8_level0_col6\" class=\"col_heading level0 col6\" >Kappa</th>\n",
       "      <th id=\"T_8a5c8_level0_col7\" class=\"col_heading level0 col7\" >MCC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_8a5c8_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
       "      <td id=\"T_8a5c8_row0_col0\" class=\"data row0 col0\" >Decision Tree Classifier</td>\n",
       "      <td id=\"T_8a5c8_row0_col1\" class=\"data row0 col1\" >0.9966</td>\n",
       "      <td id=\"T_8a5c8_row0_col2\" class=\"data row0 col2\" >0.9954</td>\n",
       "      <td id=\"T_8a5c8_row0_col3\" class=\"data row0 col3\" >0.9929</td>\n",
       "      <td id=\"T_8a5c8_row0_col4\" class=\"data row0 col4\" >0.9939</td>\n",
       "      <td id=\"T_8a5c8_row0_col5\" class=\"data row0 col5\" >0.9934</td>\n",
       "      <td id=\"T_8a5c8_row0_col6\" class=\"data row0 col6\" >0.9912</td>\n",
       "      <td id=\"T_8a5c8_row0_col7\" class=\"data row0 col7\" >0.9912</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x1154b7a1390>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                Open          High           Low         Close    Volume  \\\n",
      "203636  27248.400391  27261.000000  27246.699219  27247.199219  0.001548   \n",
      "124765  28192.099609  28204.400391  28192.099609  28204.199219  0.000772   \n",
      "104028  27856.699219  27882.199219  27828.000000  27832.599609  0.004641   \n",
      "400979  34277.398438  34295.199219  34277.398438  34295.199219  0.000109   \n",
      "362102  27251.800781  27262.699219  27240.800781  27246.900391  0.000684   \n",
      "\n",
      "              ema_7d       ema_20d       ema_30d        sma_7d       sma_20d  \\\n",
      "203636  27113.683594  27229.417969  27370.933594  27217.537109  26978.500000   \n",
      "124765  28020.646484  27105.750000  26367.845703  28112.335938  27510.529297   \n",
      "104028  26130.492188  24331.580078  23820.697266  26144.292969  23496.232422   \n",
      "400979  33612.746094  31326.005859  30324.343750  34195.015625  30375.283203   \n",
      "362102  27172.125000  26806.048828  26797.648438  27053.117188  26743.332031   \n",
      "\n",
      "        ...  macd_hist_12_26    rsi_14d    bb_mid_20d  bb_upper_20d  \\\n",
      "203636  ...        81.145332  49.971107  26978.500000  27776.058594   \n",
      "124765  ...      -106.783104  50.329514  27510.529297  29571.908203   \n",
      "104028  ...       730.804871  50.711735  23496.232422  28118.728516   \n",
      "400979  ...       480.353882  50.877605  30375.283203  36484.984375   \n",
      "362102  ...       176.446426  50.158592  26743.332031  27671.498047   \n",
      "\n",
      "        bb_lower_20d    atr_14d      fd_14d  future_trend  prediction_label  \\\n",
      "203636  26180.941406  13.369464  246.529007             0                 0   \n",
      "124765  25449.150391  22.557392  305.067993             0                 0   \n",
      "104028  18873.734375  26.277288    7.125000             0                 0   \n",
      "400979  24265.582031  17.241283    7.754000             0                 0   \n",
      "362102  25815.166016  11.289476  171.522003             0                 0   \n",
      "\n",
      "        prediction_score  \n",
      "203636               1.0  \n",
      "124765               1.0  \n",
      "104028               1.0  \n",
      "400979               1.0  \n",
      "362102               1.0  \n",
      "\n",
      "[5 rows x 23 columns]\n",
      "KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n",
      "                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,\n",
      "                     weights='uniform')\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_f227d\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_f227d_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
       "      <th id=\"T_f227d_level0_col1\" class=\"col_heading level0 col1\" >Accuracy</th>\n",
       "      <th id=\"T_f227d_level0_col2\" class=\"col_heading level0 col2\" >AUC</th>\n",
       "      <th id=\"T_f227d_level0_col3\" class=\"col_heading level0 col3\" >Recall</th>\n",
       "      <th id=\"T_f227d_level0_col4\" class=\"col_heading level0 col4\" >Prec.</th>\n",
       "      <th id=\"T_f227d_level0_col5\" class=\"col_heading level0 col5\" >F1</th>\n",
       "      <th id=\"T_f227d_level0_col6\" class=\"col_heading level0 col6\" >Kappa</th>\n",
       "      <th id=\"T_f227d_level0_col7\" class=\"col_heading level0 col7\" >MCC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_f227d_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
       "      <td id=\"T_f227d_row0_col0\" class=\"data row0 col0\" >K Neighbors Classifier</td>\n",
       "      <td id=\"T_f227d_row0_col1\" class=\"data row0 col1\" >0.9947</td>\n",
       "      <td id=\"T_f227d_row0_col2\" class=\"data row0 col2\" >0.9987</td>\n",
       "      <td id=\"T_f227d_row0_col3\" class=\"data row0 col3\" >0.9890</td>\n",
       "      <td id=\"T_f227d_row0_col4\" class=\"data row0 col4\" >0.9904</td>\n",
       "      <td id=\"T_f227d_row0_col5\" class=\"data row0 col5\" >0.9897</td>\n",
       "      <td id=\"T_f227d_row0_col6\" class=\"data row0 col6\" >0.9862</td>\n",
       "      <td id=\"T_f227d_row0_col7\" class=\"data row0 col7\" >0.9862</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x1154b7591d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                Open          High           Low         Close    Volume  \\\n",
      "203636  27248.400391  27261.000000  27246.699219  27247.199219  0.001548   \n",
      "124765  28192.099609  28204.400391  28192.099609  28204.199219  0.000772   \n",
      "104028  27856.699219  27882.199219  27828.000000  27832.599609  0.004641   \n",
      "400979  34277.398438  34295.199219  34277.398438  34295.199219  0.000109   \n",
      "362102  27251.800781  27262.699219  27240.800781  27246.900391  0.000684   \n",
      "\n",
      "              ema_7d       ema_20d       ema_30d        sma_7d       sma_20d  \\\n",
      "203636  27113.683594  27229.417969  27370.933594  27217.537109  26978.500000   \n",
      "124765  28020.646484  27105.750000  26367.845703  28112.335938  27510.529297   \n",
      "104028  26130.492188  24331.580078  23820.697266  26144.292969  23496.232422   \n",
      "400979  33612.746094  31326.005859  30324.343750  34195.015625  30375.283203   \n",
      "362102  27172.125000  26806.048828  26797.648438  27053.117188  26743.332031   \n",
      "\n",
      "        ...  macd_hist_12_26    rsi_14d    bb_mid_20d  bb_upper_20d  \\\n",
      "203636  ...        81.145332  49.971107  26978.500000  27776.058594   \n",
      "124765  ...      -106.783104  50.329514  27510.529297  29571.908203   \n",
      "104028  ...       730.804871  50.711735  23496.232422  28118.728516   \n",
      "400979  ...       480.353882  50.877605  30375.283203  36484.984375   \n",
      "362102  ...       176.446426  50.158592  26743.332031  27671.498047   \n",
      "\n",
      "        bb_lower_20d    atr_14d      fd_14d  future_trend  prediction_label  \\\n",
      "203636  26180.941406  13.369464  246.529007             0                 0   \n",
      "124765  25449.150391  22.557392  305.067993             0                 0   \n",
      "104028  18873.734375  26.277288    7.125000             0                 0   \n",
      "400979  24265.582031  17.241283    7.754000             0                 0   \n",
      "362102  25815.166016  11.289476  171.522003             0                 0   \n",
      "\n",
      "        prediction_score  \n",
      "203636               1.0  \n",
      "124765               1.0  \n",
      "104028               1.0  \n",
      "400979               1.0  \n",
      "362102               1.0  \n",
      "\n",
      "[5 rows x 23 columns]\n",
      "LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,\n",
      "               importance_type='split', learning_rate=0.1, max_depth=-1,\n",
      "               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,\n",
      "               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,\n",
      "               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,\n",
      "               subsample_for_bin=200000, subsample_freq=0)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_25aaa\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_25aaa_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
       "      <th id=\"T_25aaa_level0_col1\" class=\"col_heading level0 col1\" >Accuracy</th>\n",
       "      <th id=\"T_25aaa_level0_col2\" class=\"col_heading level0 col2\" >AUC</th>\n",
       "      <th id=\"T_25aaa_level0_col3\" class=\"col_heading level0 col3\" >Recall</th>\n",
       "      <th id=\"T_25aaa_level0_col4\" class=\"col_heading level0 col4\" >Prec.</th>\n",
       "      <th id=\"T_25aaa_level0_col5\" class=\"col_heading level0 col5\" >F1</th>\n",
       "      <th id=\"T_25aaa_level0_col6\" class=\"col_heading level0 col6\" >Kappa</th>\n",
       "      <th id=\"T_25aaa_level0_col7\" class=\"col_heading level0 col7\" >MCC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_25aaa_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
       "      <td id=\"T_25aaa_row0_col0\" class=\"data row0 col0\" >Light Gradient Boosting Machine</td>\n",
       "      <td id=\"T_25aaa_row0_col1\" class=\"data row0 col1\" >0.9926</td>\n",
       "      <td id=\"T_25aaa_row0_col2\" class=\"data row0 col2\" >0.9996</td>\n",
       "      <td id=\"T_25aaa_row0_col3\" class=\"data row0 col3\" >0.9847</td>\n",
       "      <td id=\"T_25aaa_row0_col4\" class=\"data row0 col4\" >0.9864</td>\n",
       "      <td id=\"T_25aaa_row0_col5\" class=\"data row0 col5\" >0.9855</td>\n",
       "      <td id=\"T_25aaa_row0_col6\" class=\"data row0 col6\" >0.9806</td>\n",
       "      <td id=\"T_25aaa_row0_col7\" class=\"data row0 col7\" >0.9806</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x11539c0c690>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                Open          High           Low         Close    Volume  \\\n",
      "203636  27248.400391  27261.000000  27246.699219  27247.199219  0.001548   \n",
      "124765  28192.099609  28204.400391  28192.099609  28204.199219  0.000772   \n",
      "104028  27856.699219  27882.199219  27828.000000  27832.599609  0.004641   \n",
      "400979  34277.398438  34295.199219  34277.398438  34295.199219  0.000109   \n",
      "362102  27251.800781  27262.699219  27240.800781  27246.900391  0.000684   \n",
      "\n",
      "              ema_7d       ema_20d       ema_30d        sma_7d       sma_20d  \\\n",
      "203636  27113.683594  27229.417969  27370.933594  27217.537109  26978.500000   \n",
      "124765  28020.646484  27105.750000  26367.845703  28112.335938  27510.529297   \n",
      "104028  26130.492188  24331.580078  23820.697266  26144.292969  23496.232422   \n",
      "400979  33612.746094  31326.005859  30324.343750  34195.015625  30375.283203   \n",
      "362102  27172.125000  26806.048828  26797.648438  27053.117188  26743.332031   \n",
      "\n",
      "        ...  macd_hist_12_26    rsi_14d    bb_mid_20d  bb_upper_20d  \\\n",
      "203636  ...        81.145332  49.971107  26978.500000  27776.058594   \n",
      "124765  ...      -106.783104  50.329514  27510.529297  29571.908203   \n",
      "104028  ...       730.804871  50.711735  23496.232422  28118.728516   \n",
      "400979  ...       480.353882  50.877605  30375.283203  36484.984375   \n",
      "362102  ...       176.446426  50.158592  26743.332031  27671.498047   \n",
      "\n",
      "        bb_lower_20d    atr_14d      fd_14d  future_trend  prediction_label  \\\n",
      "203636  26180.941406  13.369464  246.529007             0                 0   \n",
      "124765  25449.150391  22.557392  305.067993             0                 0   \n",
      "104028  18873.734375  26.277288    7.125000             0                 0   \n",
      "400979  24265.582031  17.241283    7.754000             0                 0   \n",
      "362102  25815.166016  11.289476  171.522003             0                 0   \n",
      "\n",
      "        prediction_score  \n",
      "203636            0.9986  \n",
      "124765            0.9959  \n",
      "104028            0.9986  \n",
      "400979            0.9988  \n",
      "362102            0.9980  \n",
      "\n",
      "[5 rows x 23 columns]\n"
     ]
    }
   ],
   "source": [
    "# Run predictions on hold-out test set\n",
    "for model in top_models:\n",
    "    print(model)\n",
    "    pred = predict_model(model)\n",
    "    print(pred.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "01d996c5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Backtesting model: RandomForestClassifier\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_1c588\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_1c588_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
       "      <th id=\"T_1c588_level0_col1\" class=\"col_heading level0 col1\" >Accuracy</th>\n",
       "      <th id=\"T_1c588_level0_col2\" class=\"col_heading level0 col2\" >AUC</th>\n",
       "      <th id=\"T_1c588_level0_col3\" class=\"col_heading level0 col3\" >Recall</th>\n",
       "      <th id=\"T_1c588_level0_col4\" class=\"col_heading level0 col4\" >Prec.</th>\n",
       "      <th id=\"T_1c588_level0_col5\" class=\"col_heading level0 col5\" >F1</th>\n",
       "      <th id=\"T_1c588_level0_col6\" class=\"col_heading level0 col6\" >Kappa</th>\n",
       "      <th id=\"T_1c588_level0_col7\" class=\"col_heading level0 col7\" >MCC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_1c588_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
       "      <td id=\"T_1c588_row0_col0\" class=\"data row0 col0\" >Random Forest Classifier</td>\n",
       "      <td id=\"T_1c588_row0_col1\" class=\"data row0 col1\" >0.9993</td>\n",
       "      <td id=\"T_1c588_row0_col2\" class=\"data row0 col2\" >1.0000</td>\n",
       "      <td id=\"T_1c588_row0_col3\" class=\"data row0 col3\" >0.9985</td>\n",
       "      <td id=\"T_1c588_row0_col4\" class=\"data row0 col4\" >0.9989</td>\n",
       "      <td id=\"T_1c588_row0_col5\" class=\"data row0 col5\" >0.9987</td>\n",
       "      <td id=\"T_1c588_row0_col6\" class=\"data row0 col6\" >0.9983</td>\n",
       "      <td id=\"T_1c588_row0_col7\" class=\"data row0 col7\" >0.9983</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x1156b657bd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "ename": "OSError",
     "evalue": "[Errno 22] Invalid argument: 'D:\\\\Coding\\\\Crypto_Research\\\\models\\trade_logs\\trade_log_RandomForestClassifier.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[31m---------------------------------------------------------------------------\u001b[39m",
      "\u001b[31mOSError\u001b[39m                                   Traceback (most recent call last)",
      "\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[10]\u001b[39m\u001b[32m, line 128\u001b[39m\n\u001b[32m    126\u001b[39m \u001b[38;5;66;03m# Save trade log as CSV\u001b[39;00m\n\u001b[32m    127\u001b[39m csv_filename = \u001b[33mf\u001b[39m\u001b[33m'\u001b[39m\u001b[33mD:\u001b[39m\u001b[33m\\\u001b[39m\u001b[33mCoding\u001b[39m\u001b[33m\\\u001b[39m\u001b[33mCrypto_Research\u001b[39m\u001b[33m\\\u001b[39m\u001b[33mmodels\u001b[39m\u001b[38;5;130;01m\\t\u001b[39;00m\u001b[33mrade_logs\u001b[39m\u001b[38;5;130;01m\\t\u001b[39;00m\u001b[33mrade_log_\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mmodel_name\u001b[38;5;132;01m}\u001b[39;00m\u001b[33m.csv\u001b[39m\u001b[33m'\u001b[39m\n\u001b[32m--> \u001b[39m\u001b[32m128\u001b[39m \u001b[43mtrade_df\u001b[49m\u001b[43m.\u001b[49m\u001b[43mto_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcsv_filename\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mindex\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[32m    129\u001b[39m \u001b[38;5;28mprint\u001b[39m(\u001b[33mf\u001b[39m\u001b[33m'\u001b[39m\u001b[33mTrade log saved: trade_log_\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mmodel_name\u001b[38;5;132;01m}\u001b[39;00m\u001b[33m.csv\u001b[39m\u001b[33m'\u001b[39m)\n\u001b[32m    131\u001b[39m \u001b[38;5;66;03m# Calculate realistic metrics\u001b[39;00m\n",
      "\u001b[36mFile \u001b[39m\u001b[32md:\\Coding\\Crypto_Research\\.venv\\Lib\\site-packages\\pandas\\core\\generic.py:3902\u001b[39m, in \u001b[36mNDFrame.to_csv\u001b[39m\u001b[34m(self, path_or_buf, sep, na_rep, float_format, columns, header, index, index_label, mode, encoding, compression, quoting, quotechar, lineterminator, chunksize, date_format, doublequote, escapechar, decimal, errors, storage_options)\u001b[39m\n\u001b[32m   3891\u001b[39m df = \u001b[38;5;28mself\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(\u001b[38;5;28mself\u001b[39m, ABCDataFrame) \u001b[38;5;28;01melse\u001b[39;00m \u001b[38;5;28mself\u001b[39m.to_frame()\n\u001b[32m   3893\u001b[39m formatter = DataFrameFormatter(\n\u001b[32m   3894\u001b[39m     frame=df,\n\u001b[32m   3895\u001b[39m     header=header,\n\u001b[32m   (...)\u001b[39m\u001b[32m   3899\u001b[39m     decimal=decimal,\n\u001b[32m   3900\u001b[39m )\n\u001b[32m-> \u001b[39m\u001b[32m3902\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mDataFrameRenderer\u001b[49m\u001b[43m(\u001b[49m\u001b[43mformatter\u001b[49m\u001b[43m)\u001b[49m\u001b[43m.\u001b[49m\u001b[43mto_csv\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m   3903\u001b[39m \u001b[43m    \u001b[49m\u001b[43mpath_or_buf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3904\u001b[39m \u001b[43m    \u001b[49m\u001b[43mlineterminator\u001b[49m\u001b[43m=\u001b[49m\u001b[43mlineterminator\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3905\u001b[39m \u001b[43m    \u001b[49m\u001b[43msep\u001b[49m\u001b[43m=\u001b[49m\u001b[43msep\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3906\u001b[39m \u001b[43m    \u001b[49m\u001b[43mencoding\u001b[49m\u001b[43m=\u001b[49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3907\u001b[39m \u001b[43m    \u001b[49m\u001b[43merrors\u001b[49m\u001b[43m=\u001b[49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3908\u001b[39m \u001b[43m    \u001b[49m\u001b[43mcompression\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcompression\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3909\u001b[39m \u001b[43m    \u001b[49m\u001b[43mquoting\u001b[49m\u001b[43m=\u001b[49m\u001b[43mquoting\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3910\u001b[39m \u001b[43m    \u001b[49m\u001b[43mcolumns\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcolumns\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3911\u001b[39m \u001b[43m    \u001b[49m\u001b[43mindex_label\u001b[49m\u001b[43m=\u001b[49m\u001b[43mindex_label\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3912\u001b[39m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m=\u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3913\u001b[39m \u001b[43m    \u001b[49m\u001b[43mchunksize\u001b[49m\u001b[43m=\u001b[49m\u001b[43mchunksize\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3914\u001b[39m \u001b[43m    \u001b[49m\u001b[43mquotechar\u001b[49m\u001b[43m=\u001b[49m\u001b[43mquotechar\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3915\u001b[39m \u001b[43m    \u001b[49m\u001b[43mdate_format\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdate_format\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3916\u001b[39m \u001b[43m    \u001b[49m\u001b[43mdoublequote\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdoublequote\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3917\u001b[39m \u001b[43m    \u001b[49m\u001b[43mescapechar\u001b[49m\u001b[43m=\u001b[49m\u001b[43mescapechar\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3918\u001b[39m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[43m=\u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   3919\u001b[39m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n",
      "\u001b[36mFile \u001b[39m\u001b[32md:\\Coding\\Crypto_Research\\.venv\\Lib\\site-packages\\pandas\\io\\formats\\format.py:1152\u001b[39m, in \u001b[36mDataFrameRenderer.to_csv\u001b[39m\u001b[34m(self, path_or_buf, encoding, sep, columns, index_label, mode, compression, quoting, quotechar, lineterminator, chunksize, date_format, doublequote, escapechar, errors, storage_options)\u001b[39m\n\u001b[32m   1131\u001b[39m     created_buffer = \u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[32m   1133\u001b[39m csv_formatter = CSVFormatter(\n\u001b[32m   1134\u001b[39m     path_or_buf=path_or_buf,\n\u001b[32m   1135\u001b[39m     lineterminator=lineterminator,\n\u001b[32m   (...)\u001b[39m\u001b[32m   1150\u001b[39m     formatter=\u001b[38;5;28mself\u001b[39m.fmt,\n\u001b[32m   1151\u001b[39m )\n\u001b[32m-> \u001b[39m\u001b[32m1152\u001b[39m \u001b[43mcsv_formatter\u001b[49m\u001b[43m.\u001b[49m\u001b[43msave\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   1154\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m created_buffer:\n\u001b[32m   1155\u001b[39m     \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(path_or_buf, StringIO)\n",
      "\u001b[36mFile \u001b[39m\u001b[32md:\\Coding\\Crypto_Research\\.venv\\Lib\\site-packages\\pandas\\io\\formats\\csvs.py:247\u001b[39m, in \u001b[36mCSVFormatter.save\u001b[39m\u001b[34m(self)\u001b[39m\n\u001b[32m    243\u001b[39m \u001b[38;5;250m\u001b[39m\u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m    244\u001b[39m \u001b[33;03mCreate the writer & save.\u001b[39;00m\n\u001b[32m    245\u001b[39m \u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m    246\u001b[39m \u001b[38;5;66;03m# apply compression and byte/text conversion\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m247\u001b[39m \u001b[38;5;28;01mwith\u001b[39;00m \u001b[43mget_handle\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    248\u001b[39m \u001b[43m    \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    249\u001b[39m \u001b[43m    \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    250\u001b[39m \u001b[43m    \u001b[49m\u001b[43mencoding\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    251\u001b[39m \u001b[43m    \u001b[49m\u001b[43merrors\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    252\u001b[39m \u001b[43m    \u001b[49m\u001b[43mcompression\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mcompression\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    253\u001b[39m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    254\u001b[39m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m \u001b[38;5;28;01mas\u001b[39;00m handles:\n\u001b[32m    255\u001b[39m     \u001b[38;5;66;03m# Note: self.encoding is irrelevant here\u001b[39;00m\n\u001b[32m    256\u001b[39m     \u001b[38;5;28mself\u001b[39m.writer = csvlib.writer(\n\u001b[32m    257\u001b[39m         handles.handle,\n\u001b[32m    258\u001b[39m         lineterminator=\u001b[38;5;28mself\u001b[39m.lineterminator,\n\u001b[32m   (...)\u001b[39m\u001b[32m    263\u001b[39m         quotechar=\u001b[38;5;28mself\u001b[39m.quotechar,\n\u001b[32m    264\u001b[39m     )\n\u001b[32m    266\u001b[39m     \u001b[38;5;28mself\u001b[39m._save()\n",
      "\u001b[36mFile \u001b[39m\u001b[32md:\\Coding\\Crypto_Research\\.venv\\Lib\\site-packages\\pandas\\io\\common.py:863\u001b[39m, in \u001b[36mget_handle\u001b[39m\u001b[34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[39m\n\u001b[32m    858\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[32m    859\u001b[39m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[32m    860\u001b[39m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[32m    861\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m ioargs.encoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[33m\"\u001b[39m\u001b[33mb\u001b[39m\u001b[33m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs.mode:\n\u001b[32m    862\u001b[39m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m863\u001b[39m         handle = \u001b[38;5;28;43mopen\u001b[39;49m\u001b[43m(\u001b[49m\n\u001b[32m    864\u001b[39m \u001b[43m            \u001b[49m\u001b[43mhandle\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    865\u001b[39m \u001b[43m            \u001b[49m\u001b[43mioargs\u001b[49m\u001b[43m.\u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    866\u001b[39m \u001b[43m            \u001b[49m\u001b[43mencoding\u001b[49m\u001b[43m=\u001b[49m\u001b[43mioargs\u001b[49m\u001b[43m.\u001b[49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    867\u001b[39m \u001b[43m            \u001b[49m\u001b[43merrors\u001b[49m\u001b[43m=\u001b[49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    868\u001b[39m \u001b[43m            \u001b[49m\u001b[43mnewline\u001b[49m\u001b[43m=\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[32m    869\u001b[39m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    870\u001b[39m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    871\u001b[39m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[32m    872\u001b[39m         handle = \u001b[38;5;28mopen\u001b[39m(handle, ioargs.mode)\n",
      "\u001b[31mOSError\u001b[39m: [Errno 22] Invalid argument: 'D:\\\\Coding\\\\Crypto_Research\\\\models\\trade_logs\\trade_log_RandomForestClassifier.csv'"
     ]
    }
   ],
   "source": [
    "# backtesting with realistic fees, risk management, and proper trade logging\n",
    "initial_capital = 10000\n",
    "fee_pct = 0.0075  # 0.75% fee per trade\n",
    "stop_loss_pct = 0.05  # 5% stop loss\n",
    "strategy_results = {}\n",
    "\n",
    "for model in top_models:\n",
    "    model_name = model.__class__.__name__\n",
    "    print(f'\\nBacktesting model: {model_name}')\n",
    "\n",
    "    # Predict on entire dataset (ensuring no look-ahead bias in model training)\n",
    "    pred_df = predict_model(model, data=df.copy())\n",
    "    pred_df['timestamp'] = pd.to_datetime(pred_df['Timestamp'])\n",
    "    pred_df.set_index('timestamp', inplace=True)\n",
    "    \n",
    "    # Sort by timestamp to ensure proper chronological order\n",
    "    pred_df = pred_df.sort_index()\n",
    "\n",
    "    # Initialize variables\n",
    "    position = 0\n",
    "    cash = initial_capital\n",
    "    trade_log = []\n",
    "    portfolio_values = []\n",
    "    in_trade = False\n",
    "    entry_price = 0\n",
    "    entry_time = None\n",
    "    total_invested = 0\n",
    "    entry_fees = 0\n",
    "\n",
    "    for i in range(len(pred_df)):\n",
    "        row = pred_df.iloc[i]\n",
    "        signal = row['prediction_label']\n",
    "        current_price = row['Close']\n",
    "        date = row.name\n",
    "\n",
    "        # Entry Logic: Buy signal\n",
    "        if signal == 1 and not in_trade:\n",
    "            # Implement realistic fee structure\n",
    "            available_for_investment = cash\n",
    "            gross_position_value = available_for_investment / (1 + fee_pct)\n",
    "            position = gross_position_value / current_price\n",
    "            entry_fees = gross_position_value * fee_pct\n",
    "            total_invested = gross_position_value + entry_fees\n",
    "            entry_price = current_price\n",
    "            entry_time = date\n",
    "            cash = 0\n",
    "            in_trade = True\n",
    "\n",
    "        # Exit Logic: Sell signal OR Stop-loss\n",
    "        elif in_trade:\n",
    "            current_value = position * current_price\n",
    "            price_change = (current_value - total_invested) / total_invested\n",
    "            \n",
    "            # Check for stop-loss\n",
    "            stop_loss_hit = price_change <= -stop_loss_pct\n",
    "            sell_signal = signal == 0\n",
    "            \n",
    "            if sell_signal or stop_loss_hit:\n",
    "                # Calculate exit with fees\n",
    "                gross_exit_value = position * current_price\n",
    "                exit_fees = gross_exit_value * fee_pct\n",
    "                exit_cash = gross_exit_value - exit_fees\n",
    "                \n",
    "                # Calculate PnL properly\n",
    "                pnl = exit_cash - total_invested\n",
    "                return_pct = pnl / total_invested * 100\n",
    "                \n",
    "                # Log the trade\n",
    "                trade_log.append({\n",
    "                    'Entry Time': entry_time,\n",
    "                    'Entry Price': round(entry_price, 2),\n",
    "                    'Exit Time': date,\n",
    "                    'Exit Price': round(current_price, 2),\n",
    "                    'Investment ($)': round(total_invested, 2),\n",
    "                    'Exit Value ($)': round(exit_cash, 2),\n",
    "                    'Entry Fees ($)': round(entry_fees, 2),\n",
    "                    'Exit Fees ($)': round(exit_fees, 2),\n",
    "                    'PnL ($)': round(pnl, 2),\n",
    "                    'Return (%)': round(return_pct, 2),\n",
    "                    'Exit Type': 'Stop-Loss' if stop_loss_hit else 'Signal Exit'\n",
    "                })\n",
    "                \n",
    "                cash = exit_cash\n",
    "                position = 0\n",
    "                in_trade = False\n",
    "                total_invested = 0\n",
    "\n",
    "        # Record realistic portfolio value\n",
    "        if in_trade:\n",
    "            current_gross_value = position * current_price\n",
    "            estimated_exit_fees = current_gross_value * fee_pct\n",
    "            portfolio_value = current_gross_value - estimated_exit_fees\n",
    "        else:\n",
    "            portfolio_value = cash\n",
    "            \n",
    "        portfolio_values.append({'timestamp': date, 'portfolio': portfolio_value})\n",
    "\n",
    "    # Handle any remaining open position\n",
    "    if in_trade:\n",
    "        final_price = pred_df['Close'].iloc[-1]\n",
    "        gross_exit_value = position * final_price\n",
    "        exit_fees = gross_exit_value * fee_pct\n",
    "        exit_cash = gross_exit_value - exit_fees\n",
    "        pnl = exit_cash - total_invested\n",
    "        return_pct = pnl / total_invested * 100\n",
    "        \n",
    "        trade_log.append({\n",
    "            'Entry Time': entry_time,\n",
    "            'Entry Price': round(entry_price, 2),\n",
    "            'Exit Time': pred_df.index[-1],\n",
    "            'Exit Price': round(final_price, 2),\n",
    "            'Investment ($)': round(total_invested, 2),\n",
    "            'Exit Value ($)': round(exit_cash, 2),\n",
    "            'Entry Fees ($)': round(entry_fees, 2),\n",
    "            'Exit Fees ($)': round(exit_fees, 2),\n",
    "            'PnL ($)': round(pnl, 2),\n",
    "            'Return (%)': round(return_pct, 2),\n",
    "            'Exit Type': 'End of Period'\n",
    "        })\n",
    "        cash = exit_cash\n",
    "\n",
    "    # Convert to DataFrames\n",
    "    port_df = pd.DataFrame(portfolio_values).set_index('timestamp')\n",
    "    trade_df = pd.DataFrame(trade_log)\n",
    "    \n",
    "    # Save trade log as CSV\n",
    "    csv_filename = f'D:\\Coding\\Crypto_Research\\models\\trade_logs\\trade_log_{model_name}.csv'\n",
    "    trade_df.to_csv(csv_filename, index=False)\n",
    "    print(f'Trade log saved: trade_log_{model_name}.csv')\n",
    "    \n",
    "    # Calculate realistic metrics\n",
    "    final_value = cash\n",
    "    net_profit = final_value - initial_capital\n",
    "    total_return = (net_profit / initial_capital) * 100\n",
    "    \n",
    "    # Portfolio returns for Sharpe ratio\n",
    "    returns = port_df['portfolio'].pct_change().dropna()\n",
    "    sharpe_ratio = (returns.mean() / returns.std()) * np.sqrt(365 * 24 * 60) if returns.std() != 0 else 0\n",
    "    \n",
    "    # Drawdown calculation\n",
    "    peak = port_df['portfolio'].cummax()\n",
    "    drawdown = (port_df['portfolio'] - peak) / peak\n",
    "    max_drawdown = abs(drawdown.min()) * 100\n",
    "    \n",
    "    # Win rate and trade count\n",
    "    if len(trade_df) > 0:\n",
    "        win_rate = (trade_df['PnL ($)'] > 0).mean() * 100\n",
    "        trade_count = len(trade_df)\n",
    "        avg_trade_return = trade_df['Return (%)'].mean()\n",
    "        total_fees_paid = trade_df['Entry Fees ($)'].sum() + trade_df['Exit Fees ($)'].sum()\n",
    "    else:\n",
    "        win_rate = 0\n",
    "        trade_count = 0\n",
    "        avg_trade_return = 0\n",
    "        total_fees_paid = 0\n",
    "            \n",
    "    # Store results\n",
    "    strategy_results[model_name] = {\n",
    "        'portfolio': port_df,\n",
    "        'trades': trade_df,\n",
    "        'final_value': final_value,\n",
    "        'return_%': total_return,\n",
    "        'sharpe': sharpe_ratio,\n",
    "        'max_drawdown': max_drawdown,\n",
    "        'win_rate': win_rate,\n",
    "        'trade_count': trade_count,\n",
    "        'avg_trade_return': avg_trade_return,\n",
    "        'total_fees': total_fees_paid\n",
    "    }\n",
    "    \n",
    "    # Print realistic performance metrics\n",
    "    print(f'Initial Capital      : ${initial_capital:,.2f}')\n",
    "    print(f'Final Portfolio Value: ${final_value:,.2f}')\n",
    "    print(f'Net Profit           : ${net_profit:,.2f}')\n",
    "    print(f'Total Return         : {total_return:.2f}%')\n",
    "    print(f'Sharpe Ratio         : {sharpe_ratio:.2f}')\n",
    "    print(f'Max Drawdown         : {max_drawdown:.2f}%')\n",
    "    print(f'Win Rate             : {win_rate:.2f}%')\n",
    "    print(f'Total Trades         : {trade_count}')\n",
    "    print(f'Avg Trade Return     : {avg_trade_return:.2f}%')\n",
    "    print(f'Total Fees Paid      : ${total_fees_paid:.2f}')\n",
    "    print(f'Fee Impact on Return : {(total_fees_paid/initial_capital)*100:.2f}%')\n",
    "\n",
    "    # --- PLOT TRADE SIGNALS ---\n",
    "    plt.figure(figsize=(14, 5))\n",
    "    plt.plot(pred_df.index, pred_df['Close'], label='BTC Price', linewidth=1)\n",
    "\n",
    "    if len(trade_df) > 0:\n",
    "        # Plot entry and exit points\n",
    "        entry_times = pd.to_datetime(trade_df['Entry Time'])\n",
    "        exit_times = pd.to_datetime(trade_df['Exit Time'])\n",
    "        entry_prices = trade_df['Entry Price']\n",
    "        exit_prices = trade_df['Exit Price']\n",
    "        \n",
    "        plt.scatter(entry_times, entry_prices, marker='^', color='green', s=50, label='Buy Signal', alpha=0.7)\n",
    "        plt.scatter(exit_times, exit_prices, marker='v', color='red', s=50, label='Sell Signal', alpha=0.7)\n",
    "\n",
    "    plt.title(f'Trade Signals - {model_name} (Realistic Fees & Risk Management)')\n",
    "    plt.xlabel('Time')\n",
    "    plt.ylabel('Price')\n",
    "    plt.legend(loc='upper left')\n",
    "    plt.tight_layout()\n",
    "    plt.grid(True)\n",
    "    plt.show()\n",
    "\n",
    "    # --- PLOT PORTFOLIO VALUE ---\n",
    "    plt.figure(figsize=(14, 4))\n",
    "    plt.plot(port_df.index, port_df['portfolio'], linewidth=2, label='Portfolio Value')\n",
    "    plt.title(f'Portfolio Value Over Time - {model_name} (After Fees & Risk Management)')\n",
    "    plt.ylabel('Portfolio ($)')\n",
    "    plt.xlabel('Time')\n",
    "    plt.legend()\n",
    "    plt.grid(True)\n",
    "    plt.tight_layout()\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a9e431c2",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
